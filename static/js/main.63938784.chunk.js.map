{"version":3,"sources":["components/common/LetterHead.tsx","components/common/PrintButton.tsx","components/prescription/Label.tsx","components/prescription/DailyQuantities.tsx","components/prescription/Input.tsx","components/prescription/MedicineName.tsx","js/search.ts","components/prescription/Table.tsx","components/prescription/Row.tsx","components/prescription/Prescription.tsx","components/prescription/Sheet.tsx","js/chart-utils.ts","components/audiogram/Chart.tsx","components/audiogram/Audiogram.tsx","components/common/Common.tsx","App.tsx","index.tsx"],"names":["Container","styled","div","printLetterHead","Title","Content","Address","LetterHead","style","fontSize","fontWeight","textAlign","ButtonPlacement","StyledButton","button","PrintButton","setPrintLetterHead","setPrint","print","event","preventDefault","onClick","e","StyledLabel","label","TextArea","textarea","Label","name","value","onChange","onInput","currentTarget","height","scrollHeight","Div","light","NumberInput","input","attrs","_","type","placeholder","min","max","DateInput","Item","ItemDate","DailyQuantities","rowIndex","useState","dailySize","setDailySize","paddingLeft","Array","fill","map","i","key","changedDates","target","length","removedDate","DailyQuantityRow","timeOfDay","time","times","setTimes","index","timesCopy","onBlur","Input","AutoCompleteContainer","AutoCompleteItems","AutoCompleteItem","highlighted","hover","MedicineName","entered","removed","setName","choices","setChoices","selected","setSelected","setHover","reset","onMouseMove","setInput","medicine","form","width","autoComplete","onKeyUp","newSelected","test","names","userEntered","array","val","replace","lowerVal","toLowerCase","words","split","wordsLower","rexStr","join","rexCase","RegExp","rex","medicines","item","score","searchStr","startsWith","searchStrLower","includes","word","push","filter","x","sort","a","b","search","slice","console","log","choice","onMouseDown","generic","Table","Column","SerialColumn","MiddleColumn","NotesColumn","TableRow","HeaderRow","StyledRow","Dosage","NameSection","Row","size","Prescription","setSize","labels","Sheet","paddingTop","X_AXIS","Y_AXIS","xInc","yInc","calcX","calcY","Legend","g","Axis","AxisTitle","AxisLabel","RightAir","RightBone","LeftAir","LeftBone","subAxisStyle","strokeWidth","stroke","strokeDasharray","subSubAxisStyle","Chart","right","left","version","role","transform","y","x1","y1","x2","y2","cx","cy","r","font","color","textAnchor","offset","points","air","pointLine","bone","initialState","reduce","o","Entry","Cell","step","setPointLine","state","setState","acc","curr","Audiogram","rightAirPoints","setRightAirPoints","rightAirPointLine","setRightAirPointLine","useEffect","rightBonePoints","setRightBonePoints","rightBonePointLine","setRightBonePointLine","leftAirPoints","setLeftAirPoints","leftPointLine","setLeftPointLine","leftBonePoints","setLeftBonePoints","leftBonePointLine","setLeftBonePointLine","ChartProps","display","justifyContent","borderBottom","borderRight","paddingRight","lineHeight","setPoint","Top","initState","fileNo","opdNo","Name","Common","clear","date","Date","toLocaleDateString","newState","OverallDiv","Navigator","App","setClear","window","to","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ssuDAGA,IAAMA,EAAYC,IAAOC,IAAV,KAMA,qBAAGC,gBAAyC,QAAU,UAI/DC,EAAQH,IAAOC,IAAV,KAMLG,EAAUJ,IAAOC,IAAV,KAKPI,EAAUL,IAAOC,IAAV,KAcAK,EAAa,SAAC,GAIpB,IAHLJ,EAGI,EAHJA,gBAIA,OACE,kBAACH,EAAD,CAAWG,gBAAiBA,GAC1B,kBAACC,EAAD,uDACA,kBAACC,EAAD,KACE,6BACE,yBAAKG,MAAO,CAAEC,SAAU,OAAQC,WAAY,SAA5C,uBAGA,6DACA,gDAEF,yBAAKF,MAAO,CAAEG,UAAW,UACvB,iDACA,8CACA,+CAGJ,kBAACL,EAAD,yH,wtBCzDN,IAAMM,EAAkBX,IAAOC,IAAV,KAYfW,EAAeZ,IAAOa,OAAV,KAwBLC,EAAc,SAAC,GAMrB,IALLC,EAKI,EALJA,mBACAC,EAII,EAJJA,SAKMC,EAAQ,SACZC,EACAhB,GAEAa,EAAmBb,GACnBgB,EAAMC,iBACNH,GAAS,IAGX,OACE,kBAACL,EAAD,KACE,6BACE,kBAACC,EAAD,CAAcQ,QAAS,SAACC,GAAD,OAAOJ,EAAMI,GAAG,KAAvC,4BAIF,6BACE,kBAACT,EAAD,CAAcQ,QAAS,SAACC,GAAD,OAAOJ,EAAMI,GAAG,KAAvC,yB,4rBC5DR,IAAMC,EAActB,IAAOuB,MAAV,KAOXC,EAAWxB,IAAOyB,SAAV,KAoCDC,EAAQ,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,SAOnC,OACE,6BACE,kBAACP,EAAD,KACGK,EADH,QAEE,kBAACH,EAAD,CACEG,KAAMA,EACNG,QAZgB,SAAC,GAEoB,IAD3CC,EAC0C,EAD1CA,cAEAA,EAAcxB,MAAMyB,OAAS,OAC7BD,EAAcxB,MAAMyB,OAApB,UAAgCD,EAAcE,aAA9C,OASMJ,SAAUA,EACVD,MAAOA,O,0rCC1DjB,IAAMM,EAAMlC,IAAOC,IAAV,KAEO,qBAAGkC,MACP,uBAAyB,qBAM/BC,EAAcpC,IAAOqC,MAAMC,OAAM,SAACC,GAAD,MAAQ,CAC7CC,KAAM,SACNC,YAAa,IACbC,IAAK,EACLC,IAAK,MAJa3C,CAAH,KA8BX4C,EAAY5C,IAAOqC,MAAV,KAaTQ,EAAO7C,IAAOC,IAAV,KAIQ,qBAAGkC,MAAqB,SAAW,aAI/CW,EAAW9C,IAAOC,IAAV,KAcD8C,EAAkB,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,SAAUb,EAAkC,EAAlCA,MAAkC,EAC1Cc,mBAAS,GADiC,mBACrEC,EADqE,KAC1DC,EAD0D,KAE5E,OACE,oCACE,kBAACjB,EAAD,CAAKC,MAAOA,GACV,kBAACU,EAAD,CAAMV,MAAOA,GAAb,WACA,kBAACU,EAAD,CAAMV,MAAOA,GAAb,aACA,kBAACU,EAAD,CAAMV,MAAOA,GAAb,SACA,kBAACW,EAAD,CAAUvC,MAAO,CAAE6C,YAAa,OAAQ1C,UAAW,SAAnD,UAID2C,MAAMH,GACJI,KAAK,IACLC,KAAI,SAAChB,EAAGiB,GAeP,OACE,kBAAC,EAAD,CACEC,IAAG,gBAAWT,EAAX,YAAuBQ,GAC1BrB,MAAOA,EACPuB,aAlBiB,SAAC,GAEsB,IADhC9B,EAC+B,EADzC+B,OAAU/B,MAEN4B,IAAMN,EAAY,GAAsB,IAAjBtB,EAAMgC,QAC/BT,EAAaD,EAAY,IAezBW,YAZgB,SAAC,GAEuB,IADhCjC,EAC+B,EADzC+B,OAAU/B,MAEN4B,IAAMN,EAAY,GAAsB,IAAjBtB,EAAMgC,QAC/BT,EAAaD,EAAY,WAsBjCY,EAAmB,SAAC,GAII,IAH5B3B,EAG2B,EAH3BA,MACAuB,EAE2B,EAF3BA,aACAG,EAC2B,EAD3BA,YAEME,EAAY,CAAC,UAAW,YAAa,SAASR,KAAI,SAACS,GAAD,MAAW,CACjEA,OACA7B,OAAO,MAHkB,EAKDc,mBAASc,GALR,mBAKpBE,EALoB,KAKbC,EALa,KAO3B,OACE,kBAAChC,EAAD,CAAKC,MAAOA,GACT8B,EAAMV,KAAI,WAAkBY,GAAW,IAA1BH,EAAyB,EAAzBA,KAAM7B,EAAmB,EAAnBA,MAWlB,OACE,kBAACU,EAAD,CAAMY,IAAKO,EAAM7B,MAAOA,GACtB,kBAACC,EAAD,CAAaP,SAZK,SAAC,GAEe,IAD1BD,EACyB,EADnC+B,OAAU/B,MAEJwC,EAAS,YAAOH,GACtBG,EAAUD,GAAS,CACjBH,OACA7B,MAAiB,MAAVP,GAETsC,EAASE,UAQb,kBAACtB,EAAD,KACE,kBAACF,EAAD,CACEH,YAAY,QACZZ,SAAU6B,EACVW,OAAQR,O,gQC7JX,IAAMS,EAAQtE,IAAOqC,MAAV,K,40BCIlB,IAAMkC,EAAwBvE,IAAOC,IAAV,KAMrBuE,EAAoBxE,IAAOC,IAAV,KAiBjBwE,GAAmBzE,IAAOC,IAAV,KAIA,qBAAGyE,YACP,YAAc,gBAGR,gBAAGA,EAAH,EAAGA,YAAH,SAAgBC,OACZD,EAAd,YAA0C,gBAY3CE,GAAe,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,QAAqB,EACnC7B,mBAAS,IAD0B,mBACpDtB,EADoD,KAC9CoD,EAD8C,OAE7B9B,mBAA8B,IAFD,mBAEpD+B,EAFoD,KAE3CC,EAF2C,OAG3BhC,oBAAkB,GAHS,mBAGpDiC,EAHoD,KAG1CC,EAH0C,OAIjClC,oBAAS,GAJwB,mBAIpD0B,EAJoD,KAI7CS,EAJ6C,KAMrDC,EAAQ,WACZJ,EAAW,IACXE,GAAa,IAoCTG,EAAc,WAClBH,GAAa,GACbC,GAAS,IAGLG,EAAW,SAACC,GAChBT,EAAQ,GAAD,OAAIS,EAASC,KAAb,YAAqBD,EAAS7D,QAGvC,OACE,kBAAC4C,EAAD,KACE,kBAACD,EAAD,CACE/D,MAAO,CAAEmF,MAAO,QAChBlD,KAAK,OACLmD,aAAa,MACblD,YAAY,iCACZZ,SAAU,SAACX,GACT2D,EAAQ3D,GACR6D,EAAQ7D,EAAMyC,OAAO/B,QAEvByC,OAzBS,SAACnD,GACd4D,EAAQ5D,GACRmE,KAwBIO,QAtDU,SAAC,GAA0D,IAAxDnC,EAAuD,EAAvDA,IACjB,GAAY,WAARA,EACF4B,SACK,GAAY,YAAR5B,EAAmB,CAC5B,IAAMoC,EAAcX,GAAY,EAAIF,EAAQpB,OAAS,EAAIsB,EAAW,EACpEC,EAAYU,GACZT,GAAS,QACJ,GAAY,cAAR3B,EAAqB,CAC9B,IAAMoC,EAAcX,GAAYF,EAAQpB,OAAS,EAAI,EAAIsB,EAAW,EACpEC,EAAYU,GACZT,GAAS,QACJ,GAAY,UAAR3B,EACLyB,GAAY,IACdK,EAASP,EAAQE,IACjBG,UAEG,GAAI,YAAYS,KAAKrC,IAAgB,cAARA,EAClC,GAAI9B,EAAKiC,OAAS,EAAG,CACnB,IAAMmC,EC9DQ,SAACC,GACrB,IADkE,EAC5DC,EAA6B,GAG7BC,EAAMF,EAAYG,QAAQ,eAAgB,IAC1CC,EAAWF,EAAIG,cAEfC,EAAuBJ,EAAIK,MAAM,KACjCC,EAAaJ,EAASG,MAAM,KAE5BE,EAAS,KAAOP,EAAIK,MAAM,IAAIG,KAAK,MAEnCC,EAAU,IAAIC,OAAOH,GACrBI,EAAM,IAAID,OAAOH,EAAQ,KAbmC,cAgB/CK,GAhB+C,IAgBlE,2BAA8B,CAAC,IAApBC,EAAmB,QACxBC,EAAQ,EAERD,EAAKE,UAAUC,WAAWhB,KAC5Bc,GAAS,GAIPD,EAAKI,eAAeD,WAAWd,KACjCY,GAAS,GAIPD,EAAKE,UAAUG,SAASlB,KAC1Bc,GAAS,GAIPD,EAAKI,eAAeC,SAAShB,KAC/BY,GAAS,GAnBiB,oBAuBTV,GAvBS,IAuB5B,2BAA0B,CAAC,IAAhBe,EAAe,QACpBN,EAAKE,UAAUG,SAASC,KAC1BL,GAAS,IAzBe,kDA8BTR,GA9BS,IA8B5B,2BAA+B,CAAC,IAArBa,EAAoB,QACzBN,EAAKI,eAAeC,SAASC,KAC/BL,GAAS,IAhCe,8BAqCxBL,EAAQb,KAAKiB,EAAKE,YACpBD,IAGEH,EAAIf,KAAKiB,EAAKI,iBAChBH,IAEFf,EAAMqB,KAAN,2BAAgBP,GAAhB,IAAsBC,YA5D0C,8BA+DlE,OAAOf,EAAMsB,QAAO,SAACC,GAAD,OAAmB,IAAZA,EAAER,SAAaS,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEX,MAAQU,EAAEV,SDDjDY,CAAOjG,GAAMkG,MAAM,EAAG,IACpC5C,EAAWc,QAEXV,SAGFyC,QAAQC,IAAI,iBAAZ,WAAkCtE,EAAlC,OA+BE7B,MAAOD,IAEW,IAAnBqD,EAAQpB,QACP,kBAACY,EAAD,KACGQ,EAAQzB,KAAI,SAACyE,EAAQ7D,GAKpB,OACE,kBAACM,GAAD,CACEhB,IAAG,UAAKuE,EAAOrG,KAAZ,YAAoBqG,EAAOxF,KAA3B,YAAmCwF,EAAOvC,KAA1C,YAAkDtB,GACrDO,YAAaP,IAAUe,EACvBP,MAAOA,EACPsD,YATgB,WAClB1C,EAASyC,GACT3C,KAQEC,YAAaA,GAEZ0C,EAAOxF,KAPV,KAOkBwF,EAAOvC,KAPzB,IAOgCuC,EAAOrG,KAAM,IAC3C,kCAAQqG,EAAOE,QAAf,Y,kzCEpIT,IAAMC,GAAQnI,IAAOC,IAAV,MAgBZmI,GAASpI,IAAOC,IAAV,MAQCoI,GAAerI,YAAOoI,GAAPpI,CAAH,MAQZsI,GAAetI,YAAOoI,GAAPpI,CAAH,MAQZuI,GAAcvI,YAAOoI,GAAPpI,CAAH,MAOXwI,GAAWxI,IAAOC,IAAV,MASRwI,GAAYzI,YAAOwI,GAAPxI,CAAH,M,mzCCnDtB,IAAM0I,GAAY1I,YAAOwI,GAAPxI,CAAH,MAEF,qBAAGmC,MAAqB,YAAc,UAIhC,qBAAGA,MAAqB,uBAAyB,UAIhD,qBAAGA,MAAqB,YAAc,UACtC,qBAAGA,MAAqB,SAAW,WAC1C,qBAAGA,MAAqB,YAAc,WAKpC,qBAAGA,MAAqB,GAAM,KAI9B,qBAAGA,MAAqB,OAAS,UAS1CwG,GAAS3I,IAAOC,IAAV,MACD,qBAAGkC,MAAqB,YAAc,WAC7B,qBAAGA,MAAqB,mBAAqB,gBAM3DX,GAAWxB,IAAOyB,SAAV,MAUD,qBAAGU,MAAqB,YAAc,UAe7CyG,GAAc5I,IAAOC,IAAV,MAWJ4I,GAAM,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,KAAM3E,EAAwC,EAAxCA,MAAOU,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,QACpC3C,EAAQgC,IAAU2E,EASxB,OACE,kBAACJ,GAAD,CAAWvG,MAAOA,GAChB,kBAACkG,GAAD,KAAelE,GACf,kBAACmE,GAAD,KACE,kBAACM,GAAD,CAAazG,MAAOA,GAClB,kBAAC,GAAD,CAAc0C,QAASA,EAASC,QAASA,IACzC,yBAAKvE,MAAO,CAAEmF,MAAO,UACnB,kBAACpB,EAAD,CACE/D,MAAO,CAAEmF,MAAO,SAChBlD,KAAK,OACLC,YAAY,eAIlB,kBAACkG,GAAD,CAAQxG,MAAOA,GACb,kBAAC,EAAD,CAAiBa,SAAUmB,EAAOhC,MAAOA,MAG7C,kBAACoG,GAAD,KACE,kBAAC,GAAD,CAAUpG,MAAOA,EAAOM,YAAY,QAAQX,QA1B1B,SAAC,GAEoB,IAD3CC,EAC0C,EAD1CA,cAEAA,EAAcxB,MAAMyB,OAAS,OAC7BD,EAAcxB,MAAMyB,OAApB,UAAgCD,EAAcE,aAA9C,YC7ES8G,GAAe,WAAO,IAAD,EACR9F,mBAAS,GADD,mBACzB6F,EADyB,KACnBE,EADmB,KAGhC,OACE,kBAACb,GAAD,KACE,kBAACM,GAAD,KACE,kBAACJ,GAAD,YACA,kBAACC,GAAD,4BACA,kBAACC,GAAD,eAEDlF,MAAMyF,GACJxF,KAAK,IACLC,KAAI,SAAChB,EAAGiB,GACP,IAAMW,EAAQX,EAAI,EAiBlB,OACE,kBAAC,GAAD,CACEC,IAAG,kBAAaU,GAChBA,MAAOA,EACP2E,KAAMA,EACNjE,QArBY,SAAC,GAE0B,EADzClB,OAAU/B,MAENuC,IAAU2E,GACZE,EAAQF,EAAO,IAkBfhE,QAdY,SAAC,GAE2B,IADhClD,EAC+B,EADzC+B,OAAU/B,MAEI,IAAVuC,GAAeA,IAAU2E,EAAO,GAAsB,IAAjBlH,EAAMgC,QAC7CoF,EAAQF,EAAO,WChCvBG,GAAwB,CAAC,YAAa,uBAE/BC,GAAQ,WACnB,OACE,oCACE,6BACGD,GAAO1F,KAAI,SAAC5B,GACX,OAAO,kBAAC,EAAD,CAAOA,KAAMA,EAAM8B,IAAK9B,QAGnC,yBAAKpB,MAAO,CAAEC,SAAU,SAAW,UACnC,6BACE,kBAAC,GAAD,OAEF,yBAAKD,MAAO,CAAE4I,WAAY,SACxB,kBAAC,EAAD,CAAOxH,KAAK,oB,SCdPyH,GAAS,CAAC,MAAO,MAAO,MAAO,KAAM,KAAM,KAAM,MACjDC,GAAS,CAAC,MAAO,MAAO,KAAM,KAAM,KAAM,KAAM,IAAK,OAErDC,GAAO,IAAuBF,GAAOxF,OACrC2F,GAAO,KAAyBF,GAAOzF,OAAS,GAEhD4F,GAAQ,SAACrF,GACpB,OAXoB,IAWHA,EAAQ,GAAKmF,IAGnBG,GAAQ,SAAC7H,GACpB,OAfoB,GAeFA,EAAQ,GAAM2H,GAAQ,EAAIA,I,2/BCD9C,IAAMG,GAAS1J,IAAO2J,EAAV,MAMNC,GAAO5J,IAAO2J,EAAV,MAMJE,GAAY7J,IAAO2J,EAAV,MAITG,GAAY9J,IAAO2J,EAAV,MAITI,GAAW/J,IAAO2J,EAAV,MAWRK,GAAYhK,YAAO+J,GAAP/J,CAAH,MAMTiK,GAAUjK,IAAO2J,EAAV,MAUPO,GAAWlK,YAAOiK,GAAPjK,CAAH,MAMRmK,GAAe,CACnBC,YAAa,MACbC,OAAQ,WACRC,gBAAiB,IACjBhH,KAAM,QAGFiH,GAAe,2BAChBJ,IADgB,IAEnBE,OAAQ,cAoBGG,GAAQ,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,KAC7B,OACE,yBACEC,QAAQ,MACRC,KAAK,MACLrK,MAAO,CACLyB,OAAO,GAAD,ODxGQ,KCyGd0D,MAAM,GAAD,ODxGQ,MC0GfmF,UAAU,mBAEV,kBAACnB,GAAD,CAAQmB,UAAU,mBAChB,0BAAMrD,EAAE,IAAIsD,EAAE,MAAd,aAGA,0BAAMC,GAAG,KAAKC,GAAG,IAAIC,GAAG,MAAMC,GAAG,IAAIb,OAAO,MAAM/G,KAAK,SACvD,4BAAQ6H,GAAG,KAAKC,GAAG,IAAIC,EAAE,IAAIhB,OAAO,MAAM/G,KAAK,UAC/C,0BAAMkE,EAAE,IAAIsD,EAAE,MAAd,cAGA,0BACEC,GAAG,KACHC,GAAG,KACHC,GAAG,MACHC,GAAG,KACHb,OAAO,MACPC,gBAAgB,IAChBhH,KAAK,SAEP,4BAAQ6H,GAAG,KAAKC,GAAG,KAAKC,EAAE,IAAIhB,OAAO,MAAM/G,KAAK,UAChD,0BAAMkE,EAAE,MAAMsD,EAAE,MAAhB,YAGA,0BAAMC,GAAG,MAAMC,GAAG,IAAIC,GAAG,MAAMC,GAAG,IAAIb,OAAO,OAAO/G,KAAK,SACzD,0BACEkE,EAAE,MACFsD,EAAE,OACFvK,MAAO,CAAE+K,KAAM,kBAAmBC,MAAO,QACzCjI,KAAK,OACLkI,WAAW,UALb,KASA,0BAAMhE,EAAE,MAAMsD,EAAE,MAAhB,aAGA,0BACEC,GAAG,MACHC,GAAG,KACHC,GAAG,MACHC,GAAG,KACHb,OAAO,OACPC,gBAAgB,IAChBhH,KAAK,SAEP,0BACEkE,EAAE,MACFsD,EAAE,OACFvK,MAAO,CAAE+K,KAAM,kBAAmBC,MAAO,QACzCjI,KAAK,OACLkI,WAAW,UALb,MAUF,kBAAC5B,GAAD,KAEGR,GAAO7F,KAAI,SAACE,EAAKU,GAChB,IAAMqD,EDpKM,ICoKQrD,EAAQ,GAAKmF,GACjC,OACE,0BACE7F,IAAKA,EACLlD,MAAO4J,GACPY,GAAIvD,EACJwD,GD1KQ,GC2KRC,GAAIzD,EACJ0D,GAAIlJ,SAIToH,GAAO7F,KAAI,SAACE,EAAKU,GAChB,IAAMqD,EDjLM,ICiLQrD,EAAQ,GAAKmF,GAAOA,GAAO,EAC/C,OACE,0BACE7F,IAAKA,EACLlD,MAAOgK,GACPQ,GAAIvD,EACJwD,GDvLQ,GCwLRC,GAAIzD,EACJ0D,GAAIlJ,SAKTqH,GAAO9F,KAAI,SAACE,EAAKU,GAChB,IAAM2G,EAAI9I,KAAmBmC,EAAQ,GAAKoF,GAC1C,OAAOpF,IAAUkF,GAAOzF,OAAS,EAC/B,0BACEH,IAAKA,EACLlD,MAAO4J,GACPY,GDpMQ,GCqMRC,GAAIF,EACJG,GAAIvF,IACJwF,GAAIJ,IAEJ,QAELzB,GAAO9F,KAAI,SAACE,EAAKU,GAChB,IAAM2G,EAAI9I,KAAmBmC,EAAQ,GAAKoF,GAAOA,GAAO,EACxD,OAAOpF,IAAUkF,GAAOzF,OAAS,EAC/B,0BACEH,IAAKA,EACLlD,MAAOgK,GACPQ,GDjNQ,GCkNRC,GAAIF,EACJG,GAAIvF,IACJwF,GAAIJ,IAEJ,QAGN,0BACEC,GD1NY,GC2NZC,GAAIhJ,IACJiJ,GAAIvF,IACJwF,GAAIlJ,MAGN,0BAAM+I,GDhOQ,GCgOIC,GDhOJ,GCgOgBC,GDhOhB,GCgO4BC,GAAIlJ,OAEhD,kBAAC8H,GAAD,KACGV,GAAO7F,KAAI,SAACE,EAAKU,GAChB,IAAMqD,EDpOM,ICoOQrD,EAAQ,GAAKmF,GACjC,OACE,0BAAM7F,IAAKA,EAAK+D,EAAGA,EAAGsD,EAAG9I,IAAsBwJ,WAAW,UACvD/H,MAIN4F,GAAO9F,KAAI,SAACE,EAAKU,GAChB,IAAM2G,EAAI9I,IAAkBmC,EAAQoF,GAAO,EAC3C,OACE,0BAAM9F,IAAKA,EAAK+D,EAAGiE,GAAYX,EAAGA,EAAGU,WAAW,OAC7C/H,OAKT,kBAACoG,GAAD,KACE,0BACErC,EAAGiE,GACHX,EAAG9I,MACHwJ,WAAW,SACXX,UAAS,sBAAiBY,GAAjB,aAAiCzJ,MAAjC,MAJX,kBAQA,0BAAMwF,EAAG9B,MAAWoF,EAAG9I,IAAsBwJ,WAAW,UAAxD,mBAIF,kBAACzB,GAAD,KACE,8BAAU2B,OAAQjB,EAAMkB,IAAIC,YAC3BxC,GAAO7F,KAAI,SAACiE,EAAGrD,GACd,IAAMgH,EAAK3B,GAAMrF,GACXiH,EAAK3B,GAAMgB,EAAMkB,IAAID,OAAOlE,IAClC,ODpQa,KCoQNiD,EAAMkB,IAAID,OAAOlE,GAAiB,KACvC,4BAAQ/D,IAAK+D,EAAG2D,GAAIA,EAAIC,GAAIA,EAAIC,EAAE,UAIxC,kBAACrB,GAAD,KACE,8BAAU0B,OAAQjB,EAAMoB,KAAKD,YAC5BxC,GAAO7F,KAAI,SAACiE,EAAGrD,GACd,IAAMgH,EAAK3B,GAAMrF,GACXiH,EAAK3B,GAAMgB,EAAMoB,KAAKH,OAAOlE,IACnC,OD9Qa,KC8QNiD,EAAMoB,KAAKH,OAAOlE,GAAiB,KACxC,4BAAQ/D,IAAK+D,EAAG2D,GAAIA,EAAIC,GAAIA,EAAIC,EAAE,UAIxC,kBAACpB,GAAD,KACGb,GAAO7F,KAAI,SAACiE,EAAGrD,GACd,IAAMgH,EAAK3B,GAAMrF,GACXiH,EAAK3B,GAAMiB,EAAKiB,IAAID,OAAOlE,IAAM,IACvC,ODvRa,KCuRNkD,EAAKiB,IAAID,OAAOlE,GAAiB,KACtC,0BAAM/D,IAAK+D,EAAGA,EAAG2D,EAAIL,EAAGM,EAAII,WAAW,UAAvC,QAKJ,8BAAUlI,KAAK,OAAOoI,OAAQhB,EAAKiB,IAAIC,aAEzC,kBAAC1B,GAAD,KACGd,GAAO7F,KAAI,SAACiE,EAAGrD,GACd,IAAMgH,EAAK3B,GAAMrF,GACXiH,EAAK3B,GAAMiB,EAAKmB,KAAKH,OAAOlE,IAAM,IACxC,ODnSa,KCmSNkD,EAAKmB,KAAKH,OAAOlE,GAAiB,KACvC,0BAAM/D,IAAK+D,EAAGA,EAAG2D,EAAIL,EAAGM,EAAII,WAAW,UAAvC,QAKJ,8BAAUlI,KAAK,OAAOoI,OAAQhB,EAAKmB,KAAKD,e,2vBCnShD,IAAME,GAA0B1C,GAAO2C,QACrC,SAACC,EAAGvI,GAAJ,mBAAC,eAAiBuI,GAAlB,mBAAsBvI,GFPD,OEQrB,IAGIwI,GAAQjM,IAAOC,IAAV,MAMLiM,GAAOlM,IAAOC,IAAV,MAcJmC,GAAcpC,IAAOqC,MAAMC,OAAM,SAACC,GAAD,MAAQ,CAC7CC,KAAM,SACNC,YAAa,IACbC,KAAM,GACNC,IAAK,GACLwJ,KAAM,KALYnM,CAAH,MAuBXoM,GAAe,SACnBC,EACAC,GAWAA,EATelD,GAAO2C,QAAO,SAACQ,EAAKC,EAAMrI,GACvC,OAAIkI,EAAMG,IF3DS,GE8DVD,EAAM,IAFF/C,GAAMrF,GAEO,IADbsF,GAAM4C,EAAMG,IAGhBD,IAER,MAaQE,GAAY,WAAO,IAAD,EACexJ,mBAAS6I,IADxB,mBACtBY,EADsB,KACNC,EADM,OAEqB1J,mBAAS,IAF9B,mBAEtB2J,EAFsB,KAEHC,EAFG,KAG7BC,qBAAU,kBAAMV,GAAaM,EAAgBG,KAAuB,CAClEH,IAJ2B,MAOiBzJ,mBAAS6I,IAP1B,mBAOtBiB,EAPsB,KAOLC,EAPK,OAQuB/J,mBAAS,IARhC,mBAQtBgK,EARsB,KAQFC,EARE,KAS7BJ,qBAAU,kBAAMV,GAAaW,EAAiBG,KAAwB,CACpEH,IAV2B,MAaa9J,mBAAS6I,IAbtB,mBAatBqB,EAbsB,KAaPC,EAbO,OAcanK,mBAAS,IAdtB,mBActBoK,EAdsB,KAcPC,EAdO,KAe7BR,qBAAU,kBAAMV,GAAae,EAAeG,KAAmB,CAC7DH,IAhB2B,MAmBelK,mBAAS6I,IAnBxB,mBAmBtByB,EAnBsB,KAmBNC,EAnBM,OAoBqBvK,mBAAS,IApB9B,mBAoBtBwK,EApBsB,KAoBHC,EApBG,KAqB7BZ,qBAAU,kBAAMV,GAAamB,EAAgBG,KAAuB,CAClEH,IAGF,IAAMI,EAAa,CACjBlD,MAAO,CACLkB,IAAK,CACHD,OAAQgB,EACRd,UAAWgB,GAEbf,KAAM,CACJH,OAAQqB,EACRnB,UAAWqB,IAGfvC,KAAM,CACJiB,IAAK,CACHD,OAAQyB,EACRvB,UAAWyB,GAEbxB,KAAM,CACJH,OAAQ6B,EACR3B,UAAW6B,KAKjB,OACE,yBACElN,MAAO,CACLqN,QAAS,OACTC,eAAgB,gBAChB1E,WAAY,SAGd,kBAAC8C,GAAD,KAEE,yBAAK1L,MAAO,CAAEqN,QAAS,OAAQE,aAAc,wBAC3C,kBAAC5B,GAAD,CACE3L,MAAO,CACLG,UAAW,QACXqN,YAAa,sBACbC,aAAc,MACdC,WAAY,SALhB,QAUA,6BACE,yBAAK1N,MAAO,CAAEmF,MAAO,QAAShF,UAAW,WAAzC,SACA,yBAAKH,MAAO,CAAEqN,QAAS,SACrB,kBAAC1B,GAAD,YACA,kBAACA,GAAD,eAGJ,6BACE,yBAAK3L,MAAO,CAAEmF,MAAO,QAAShF,UAAW,WAAzC,QACA,yBAAKH,MAAO,CAAEqN,QAAS,SACrB,kBAAC1B,GAAD,YACA,kBAACA,GAAD,gBAKN,yBAAK3L,MAAO,CAAEqN,QAAS,SACrB,kBAAC1B,GAAD,CACE3L,MAAO,CAAEwN,YAAa,sBAAuBC,aAAc,QAE1D5E,GAAO7F,KAAI,SAACiE,GAAD,OACV,yBAAK/D,IAAK+D,EAAGjH,MAAO,CAAEyB,OAAQ,OAAQtB,UAAW,UAC9C8G,OAIN,CACC,CAAE6E,MAAOK,EAAgBJ,SAAUK,GACnC,CAAEN,MAAOU,EAAiBT,SAAUU,GACpC,CAAEX,MAAOc,EAAeb,SAAUc,GAClC,CAAEf,MAAOkB,EAAgBjB,SAAUkB,IACnCjK,KAAI,SAACyI,EAAGxI,GAAJ,OACJ,yBAAKC,IAAG,cAASuI,EAAT,YAAcxI,IACnB4F,GAAO7F,KAAI,SAACiE,GAAD,OACV,kBAAC0E,GAAD,CAAMzI,IAAG,eAAUuI,EAAV,YAAexI,EAAf,YAAoBgE,IAC3B,kBAAC,GAAD,CACE3F,SAAU,gBAAaD,EAAb,EAAG+B,OAAU/B,MAAb,OAlHb,SACf6B,EACA7B,EACAyK,EACAC,GAEAA,EAAS,2BAAKD,GAAN,mBAAc5I,GAAO7B,KA6GTsM,CAAS1G,EAAG5F,EAAOoK,EAAEK,MAAOL,EAAEM,uBAS9C,6BACE,kBAAC,GAAUqB,M,sxBCnMnB,IAAMrJ,GAAQtE,IAAOqC,MAAMC,OAAM,SAACC,GAAD,MAAQ,CACvCC,KAAM,UADMxC,CAAH,MAiCLmO,GAAMnO,IAAOC,IAAV,MAcHmO,GAAuB,CAC3BC,OAAQ,GACRC,MAAO,GACPC,KAAM,IAOKC,GAAS,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MACjBC,GAAO,IAAIC,MAAOC,mBAAmB,SADK,EAGtB3L,mBAASmL,IAHa,mBAGzC/B,EAHyC,KAGlCC,EAHkC,KAKhDQ,qBAAU,WACJ2B,GACFnC,EAAS8B,MAEV,CAACK,IAEJ,IAAM5M,EAAW,SAAC,GAEgD,IAAD,IAD/D8B,OAAUhC,EACqD,EADrDA,KAAMC,EAC+C,EAD/CA,MAEViN,EAAQ,2BAAQxC,GAAR,mBAAgB1K,EAAOC,IACrC0K,EAASuC,IAGX,OACE,oCACE,kBAACV,GAAD,KACE,6BACE,0CACW,IACT,kBAAC,GAAD,CAAOxM,KAAK,SAASC,MAAOyK,EAAMgC,OAAQxM,SAAUA,MAGxD,6BACE,yCACU,IACR,kBAAC,GAAD,CAAOF,KAAK,QAAQC,MAAOyK,EAAMiC,MAAOzM,SAAUA,MAGtD,sCAAY6M,IAEd,6BACE,kBAAC,EAAD,CAAO/M,KAAK,OAAOC,MAAOyK,EAAMkC,KAAM1M,SAAUA,O,8rBCvFxD,IAAMiN,GAAa9O,IAAOC,IAAV,MAMG,qBAAGC,gBACE,OAAS,UAI3B6O,GAAY/O,IAAOC,IAAV,MAyBF+O,GAAM,WAAO,IAAD,EACuB/L,oBAAS,GADhC,mBAChB/C,EADgB,KACCa,EADD,OAEGkC,oBAAS,GAFZ,mBAEhBhC,EAFgB,KAETD,EAFS,OAIGiC,oBAAS,GAJZ,mBAIhBwL,EAJgB,KAITQ,EAJS,KAmBvB,OAbAnC,qBAAU,WACJ7L,IACFD,GAAS,GACTkO,OAAOjO,WAER,CAACA,IAEJ6L,qBAAU,WACJ2B,GACFQ,GAAS,KAEV,CAACR,IAGF,oCACE,kBAAC,EAAD,CAAYvO,gBAAiBA,IAC7B,kBAAC4O,GAAD,CAAY5O,gBAAiBA,GAC3B,kBAAC,GAAD,CAAQuO,MAAOA,IACf,kBAAC,IAAD,KACE,kBAACM,GAAD,KACE,6BACE,kBAAC,IAAD,CAAMI,GAAG,IAAI/N,QAAS,kBAAM6N,GAAS,KACnC,wCAGJ,6BACE,kBAAC,IAAD,CAAME,GAAG,gBACP,+CAGJ,6BACE,kBAAC,IAAD,CAAMA,GAAG,cACP,6CAIN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,gBACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,cACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KAAK,SAIvB,kBAAC,EAAD,CACErO,mBAAoBA,EACpBC,SAAUA,MC/FlBqO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.63938784.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div<{ printLetterHead: boolean }>`\n  margin-left: 30px;\n  margin-right: 30px;\n  margin-top: 10px;\n  display: block;\n  @media print {\n    display: ${({ printLetterHead }) => (printLetterHead ? 'block' : 'none')};\n  }\n`;\n\nconst Title = styled.div`\n  text-align: center;\n  font-size: 30px;\n  font-weight: bold;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Address = styled.div`\n  text-align: center;\n  font-size: 13px;\n  font-weight: bold;\n\n  margin-top: 5px;\n\n  padding-top: 2px;\n  padding-bottom: 2px;\n\n  border-top: 2px solid black;\n  border-bottom: 2px solid black;\n`;\n\nexport const LetterHead = ({\n  printLetterHead,\n}: {\n  printLetterHead: boolean;\n}) => {\n  return (\n    <Container printLetterHead={printLetterHead}>\n      <Title>JK Holistic Ear nose Throat &amp; Head-Neck Clinic</Title>\n      <Content>\n        <div>\n          <div style={{ fontSize: '20px', fontWeight: 'bold' }}>\n            Dr. Janardhan N. C.\n          </div>\n          <div>MBBS, MS(ENT), DORL, PGDHHCM</div>\n          <div>Reg. No: 45341</div>\n        </div>\n        <div style={{ textAlign: 'right' }}>\n          <div>Mon/Wed/Thur/Sat</div>\n          <div>10 am to 1 pm</div>\n          <div>5 pm to 8 pm</div>\n        </div>\n      </Content>\n      <Address>\n        45,46 Panvel City Centre, Ground Floor, Dr. B. Ambedkar Road,\n        Panvel-410206. Tel: 022-27456244 Mob: 9324796638\n      </Address>\n    </Container>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst ButtonPlacement = styled.div`\n  position: fixed;\n  top: 10px;\n  right: 10px;\n\n  font-weight: bold;\n  & > div {\n    text-align: right;\n    margin-bottom: 10px;\n  }\n`;\n\nconst StyledButton = styled.button`\n  padding: 4px 10px;\n  text-decoration: none;\n  border-radius: 4px;\n  border: 1px solid gray;\n  background: linear-gradient(to bottom, whitesmoke 0%, lightgray 100%);\n\n  &:hover {\n    border-color: black;\n    background: linear-gradient(to bottom, lightgray 0%, whitesmoke 100%);\n  }\n  &:active {\n    top: 11px;\n  }\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 10px gray;\n  }\n\n  @media print {\n    display: none;\n  }\n`;\n\nexport const PrintButton = ({\n  setPrintLetterHead,\n  setPrint,\n}: {\n  setPrintLetterHead: React.Dispatch<React.SetStateAction<boolean>>;\n  setPrint: React.Dispatch<React.SetStateAction<boolean>>;\n}) => {\n  const print = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n    printLetterHead: boolean\n  ): void => {\n    setPrintLetterHead(printLetterHead);\n    event.preventDefault();\n    setPrint(true);\n  };\n\n  return (\n    <ButtonPlacement>\n      <div>\n        <StyledButton onClick={(e) => print(e, true)}>\n          &#128438; LetterHead\n        </StyledButton>\n      </div>\n      <div>\n        <StyledButton onClick={(e) => print(e, false)}>\n          &#128438; Print\n        </StyledButton>\n      </div>\n    </ButtonPlacement>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledLabel = styled.label`\n  font-weight: bold;\n  display: flex;\n  align-items: flex-start;\n  line-height: inherit;\n`;\n\nconst TextArea = styled.textarea`\n  vertical-align: top;\n  width: 100%;\n  height: 27px;\n  border: none;\n  border-bottom: 1px dotted gray;\n  overflow: hidden;\n  padding-top: 0px;\n  resize: vertical;\n  &::-webkit-resizer {\n    display: none;\n  }\n  &:focus {\n    outline: transparent;\n    border-bottom: 1px solid gray;\n  }\n  @media print {\n    border: none;\n    &:focus {\n      outline: none;\n      border: none;\n    }\n    &::placeholder {\n      color: transparent;\n    }\n  }\n`;\n\ntype LabelProps = {\n  name: string;\n  value?: string;\n  onChange?: (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => void;\n};\n\nexport const Label = ({ name, value, onChange }: LabelProps) => {\n  const onTextAreaInput = ({\n    currentTarget,\n  }: React.FormEvent<HTMLTextAreaElement>) => {\n    currentTarget.style.height = '27px';\n    currentTarget.style.height = `${currentTarget.scrollHeight}px`;\n  };\n  return (\n    <div>\n      <StyledLabel>\n        {name}:&nbsp;\n        <TextArea\n          name={name}\n          onInput={onTextAreaInput}\n          onChange={onChange}\n          value={value}\n        />\n      </StyledLabel>\n    </div>\n  );\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport styled from 'styled-components';\n\nconst Div = styled.div<{ light: boolean }>`\n  display: flex;\n  border-top: ${({ light }) =>\n    light ? '1px dotted lightgray' : '1px dotted gray'};\n  @media print {\n    border-top: none;\n  }\n`;\n\nconst NumberInput = styled.input.attrs((_) => ({\n  type: 'number',\n  placeholder: '0',\n  min: 0,\n  max: 99,\n}))`\n  width: 40px;\n  border: none;\n  text-align: center;\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    opacity: 1;\n  }\n  @media print {\n    &:focus {\n      border: none;\n      outline: none;\n    }\n    &::placeholder {\n      color: transparent;\n    }\n\n    &::-webkit-outer-spin-button,\n    &::-webkit-inner-spin-button {\n      -webkit-appearance: none;\n      margin: 0;\n    }\n  }\n`;\n\nconst DateInput = styled.input`\n  width: 100%;\n  border: none;\n  @media print {\n    &:focus {\n      outline: none;\n    }\n    &::placeholder {\n      color: transparent;\n    }\n  }\n`;\n\nconst Item = styled.div<{ light: boolean }>`\n  width: 120px;\n  text-align: center;\n  @media print {\n    visibility: ${({ light }) => (light ? 'hidden' : 'visible')};\n  }\n`;\n\nconst ItemDate = styled.div`\n  flex-grow: 1;\n  padding-left: 10px;\n  text-align: left;\n  & input {\n    text-align: left;\n  }\n`;\n\ntype DailyQuantitiesProps = {\n  rowIndex: number;\n  light: boolean;\n};\n\nexport const DailyQuantities = ({ rowIndex, light }: DailyQuantitiesProps) => {\n  const [dailySize, setDailySize] = useState(1);\n  return (\n    <>\n      <Div light={light}>\n        <Item light={light}>Morning</Item>\n        <Item light={light}>Afternoon</Item>\n        <Item light={light}>Night</Item>\n        <ItemDate style={{ paddingLeft: '12px', textAlign: 'left' }}>\n          Dates\n        </ItemDate>\n      </Div>\n      {Array(dailySize)\n        .fill('')\n        .map((_, i) => {\n          const changedDates = ({\n            target: { value },\n          }: React.ChangeEvent<HTMLInputElement>) => {\n            if (i === dailySize - 1 && value.length !== 0) {\n              setDailySize(dailySize + 1);\n            }\n          };\n          const removedDate = ({\n            target: { value },\n          }: React.ChangeEvent<HTMLInputElement>) => {\n            if (i !== dailySize - 1 && value.length === 0) {\n              setDailySize(dailySize - 1);\n            }\n          };\n          return (\n            <DailyQuantityRow\n              key={`daily-${rowIndex}-${i}`}\n              light={light}\n              changedDates={changedDates}\n              removedDate={removedDate}\n            />\n          );\n        })}\n    </>\n  );\n};\n\ntype DailyQuantityRowProps = {\n  light: boolean;\n  changedDates: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  removedDate: (event: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst DailyQuantityRow = ({\n  light,\n  changedDates,\n  removedDate,\n}: DailyQuantityRowProps) => {\n  const timeOfDay = ['Morning', 'Afternoon', 'Night'].map((time) => ({\n    time,\n    light: true,\n  }));\n  const [times, setTimes] = useState(timeOfDay);\n\n  return (\n    <Div light={light}>\n      {times.map(({ time, light }, index) => {\n        const handleChanged = ({\n          target: { value },\n        }: ChangeEvent<HTMLInputElement>) => {\n          const timesCopy = [...times];\n          timesCopy[index] = {\n            time,\n            light: value === '0',\n          };\n          setTimes(timesCopy);\n        };\n        return (\n          <Item key={time} light={light}>\n            <NumberInput onChange={handleChanged} />\n          </Item>\n        );\n      })}\n      <ItemDate>\n        <DateInput\n          placeholder='Dates'\n          onChange={changedDates}\n          onBlur={removedDate}\n        />\n      </ItemDate>\n    </Div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  border: none;\n  padding-top: 0px;\n  padding-bottom: 0px;\n  @media print {\n    &:focus {\n      outline: none;\n    }\n    &::placeholder {\n      color: transparent;\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport { search, SearchResult } from '../../js/search';\nimport { Input } from './Input';\n\nconst AutoCompleteContainer = styled.div`\n  position: relative;\n  flex-grow: 2;\n  text-align: left;\n`;\n\nconst AutoCompleteItems = styled.div`\n  position: absolute;\n  border: 1px solid lightgray;\n  border-bottom: none;\n  border-top: none;\n  z-index: 99;\n  /*position the autocomplete items to be the same width as the container:*/\n  top: 100%;\n  left: -20px;\n  right: 0;\n  box-shadow: 0px 3px 10px gray;\n  width: 130%;\n  @media print {\n    display: none;\n  }\n`;\n\nconst AutoCompleteItem = styled.div<{ highlighted: boolean; hover: boolean }>`\n  text-align: left !important;\n  padding: 3px;\n  cursor: pointer;\n  background-color: ${({ highlighted }) =>\n    highlighted ? 'lightgray' : 'whitesmoke'};\n  border-bottom: 1px solid gray;\n  &:hover {\n    background-color: ${({ highlighted, hover }) =>\n      hover ? 'lightgray' : highlighted ? 'lightgray' : 'whitesmoke'};\n  }\n  & span {\n    font-style: italic;\n  }\n`;\n\ntype Props = {\n  entered: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  removed: (e: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport const MedicineName = ({ entered, removed }: Props) => {\n  const [name, setName] = useState('');\n  const [choices, setChoices] = useState<Array<SearchResult>>([]);\n  const [selected, setSelected] = useState<number>(-1);\n  const [hover, setHover] = useState(true);\n\n  const reset = () => {\n    setChoices([]);\n    setSelected(-1);\n  };\n\n  const onKeyUp = ({ key }: React.KeyboardEvent<HTMLInputElement>): void => {\n    if (key === 'Escape') {\n      reset();\n    } else if (key === 'ArrowUp') {\n      const newSelected = selected <= 0 ? choices.length - 1 : selected - 1;\n      setSelected(newSelected);\n      setHover(false);\n    } else if (key === 'ArrowDown') {\n      const newSelected = selected >= choices.length - 1 ? 0 : selected + 1;\n      setSelected(newSelected);\n      setHover(false);\n    } else if (key === 'Enter') {\n      if (selected >= 0) {\n        setInput(choices[selected]);\n        reset();\n      }\n    } else if (/[a-z0-9]/i.test(key) || key === 'Backspace') {\n      if (name.length > 0) {\n        const names = search(name).slice(0, 10);\n        setChoices(names);\n      } else {\n        reset();\n      }\n    } else {\n      console.log('SOMETHING ELSE', `\"${key}\"`);\n    }\n  };\n\n  const onBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    removed(event);\n    reset();\n  };\n\n  const onMouseMove = () => {\n    setSelected(-1);\n    setHover(true);\n  };\n\n  const setInput = (medicine: SearchResult) => {\n    setName(`${medicine.form} ${medicine.name}`);\n  };\n\n  return (\n    <AutoCompleteContainer>\n      <Input\n        style={{ width: '100%' }}\n        type='text'\n        autoComplete='off'\n        placeholder='Medicine Name, Type &amp; Strength'\n        onChange={(event) => {\n          entered(event);\n          setName(event.target.value);\n        }}\n        onBlur={onBlur}\n        onKeyUp={onKeyUp}\n        value={name}\n      />\n      {choices.length !== 0 && (\n        <AutoCompleteItems>\n          {choices.map((choice, index) => {\n            const onMouseDown = () => {\n              setInput(choice);\n              reset();\n            };\n            return (\n              <AutoCompleteItem\n                key={`${choice.name}-${choice.type}-${choice.form}-${index}`}\n                highlighted={index === selected}\n                hover={hover}\n                onMouseDown={onMouseDown}\n                onMouseMove={onMouseMove}\n              >\n                {choice.type}: {choice.form} {choice.name}{' '}\n                <span>({choice.generic})</span>\n              </AutoCompleteItem>\n            );\n          })}\n        </AutoCompleteItems>\n      )}\n    </AutoCompleteContainer>\n  );\n};\n","import medicines from '../assets/medicine-array.json';\n\ntype MedicineType = {\n  type: string;\n  form: string;\n  name: string;\n  generic: string;\n  strength: string;\n  notes: string;\n};\n\nexport type SearchResult = MedicineType & {\n  searchStr: string;\n  searchStrLower: string;\n  score: number;\n};\n\nexport const search = (userEntered: string): Array<SearchResult> => {\n  const array: Array<SearchResult> = [];\n\n  // converting the word to search in multiple ways\n  const val = userEntered.replace(/[^0-9a-z ]/gi, '');\n  const lowerVal = val.toLowerCase();\n\n  const words: Array<string> = val.split(' ');\n  const wordsLower = lowerVal.split(' ');\n\n  const rexStr = '.*' + val.split('').join('.*');\n\n  const rexCase = new RegExp(rexStr);\n  const rex = new RegExp(rexStr, 'i');\n\n  // Loop only once\n  for (const item of medicines) {\n    let score = 0;\n    // full user search starts\n    if (item.searchStr.startsWith(val)) {\n      score += 5;\n    }\n\n    // full user search case insensitive start\n    if (item.searchStrLower.startsWith(lowerVal)) {\n      score += 5;\n    }\n\n    // full user search\n    if (item.searchStr.includes(val)) {\n      score += 3;\n    }\n\n    // full user search case insensitive\n    if (item.searchStrLower.includes(lowerVal)) {\n      score += 3;\n    }\n\n    // search for words\n    for (const word of words) {\n      if (item.searchStr.includes(word)) {\n        score += 2;\n      }\n    }\n\n    // search for words case insensitive\n    for (const word of wordsLower) {\n      if (item.searchStrLower.includes(word)) {\n        score += 2;\n      }\n    }\n\n    // search individual letters\n    if (rexCase.test(item.searchStr)) {\n      score++;\n    }\n\n    if (rex.test(item.searchStrLower)) {\n      score++;\n    }\n    array.push({ ...item, score });\n  }\n\n  return array.filter((x) => x.score !== 0).sort((a, b) => b.score - a.score);\n};\n","import styled from 'styled-components';\n\nexport const Table = styled.div`\n  width: 100%;\n  border: none;\n  & div {\n    border: none;\n    text-align: center;\n  }\n  @media print {\n    border: none;\n    & div {\n      border: none;\n      caret-color: transparent;\n    }\n  }\n`;\n\nconst Column = styled.div`\n  vertical-align: top;\n  border-width: 1px !important;\n  @media print {\n    border: none !important;\n  }\n`;\n\nexport const SerialColumn = styled(Column)`\n  width: 25px;\n  vertical-align: top;\n  text-align: center;\n  border-left: 1px solid gray;\n  border-right: none !important;\n`;\n\nexport const MiddleColumn = styled(Column)`\n  flex-grow: 1;\n  color: black;\n  text-align: center;\n  border-left: 1px solid gray;\n  border-right: 1px solid gray;\n`;\n\nexport const NotesColumn = styled(Column)`\n  width: 100px;\n  text-align: left;\n  border-right: 1px solid gray;\n  border-left: none !important;\n`;\n\nexport const TableRow = styled.div`\n  display: flex;\n  width: 100%;\n  & > div {\n    border-top: none !important;\n    border-bottom: none !important;\n  }\n`;\n\nexport const HeaderRow = styled(TableRow)`\n  font-weight: bold;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { DailyQuantities } from './DailyQuantities';\nimport { Input } from './Input';\nimport { MedicineName } from './MedicineName';\nimport { MiddleColumn, NotesColumn, SerialColumn, TableRow } from './Table';\n\nconst StyledRow = styled(TableRow)<{ light: boolean }>`\n  & input::placeholder {\n    color: ${({ light }) => (light ? 'lightgray' : 'gray')};\n  }\n\n  border-top: 1px solid gray !important;\n  border-bottom: ${({ light }) => (light ? '1px dotted lightgray' : 'none')};\n\n  & > div {\n    padding: 0 0 0 0;\n    border-color: ${({ light }) => (light ? 'lightgray' : 'gray')};\n    border-style: ${({ light }) => (light ? 'dotted' : 'solid')};\n    color: ${({ light }) => (light ? 'lightgray' : 'black')};\n  }\n\n  & input[type='number']::-webkit-outer-spin-button,\n  & input[type='number']::-webkit-inner-spin-button {\n    opacity: ${({ light }) => (light ? 0.3 : 1.0)};\n  }\n\n  @media print {\n    display: ${({ light }) => (light ? 'none' : 'auto')};\n    border: none !important;\n    border-top: 1px dotted gray !important;\n    & input::placeholder {\n      color: transparent;\n    }\n  }\n`;\n\nconst Dosage = styled.div<{ light: boolean }>`\n  color: ${({ light }) => (light ? 'lightgray' : 'black')};\n  border-top: 1px ${({ light }) => (light ? 'dotted lightgray' : 'solid gray')} !important;\n  @media print {\n    border-top: none !important;\n  }\n`;\n\nconst TextArea = styled.textarea<{ light: boolean }>`\n  vertical-align: top;\n  width: 99px;\n  height: 75px;\n  border: none;\n  overflow: hidden;\n  resize: vertical;\n  padding-top: 0px;\n  padding-bottom: 0px;\n  &::placeholder {\n    color: ${({ light }) => (light ? 'lightgray' : 'gray')};\n  }\n  &::-webkit-resizer {\n    display: none;\n  }\n  @media print {\n    &:focus {\n      outline: none;\n    }\n    &::placeholder {\n      color: transparent;\n    }\n  }\n`;\n\nconst NameSection = styled.div<{ light: boolean }>`\n  display: flex;\n`;\n\ntype RowProps = {\n  size: number;\n  index: number;\n  entered: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  removed: (e: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport const Row = ({ size, index, entered, removed }: RowProps) => {\n  const light = index === size;\n\n  const onTextAreaInput = ({\n    currentTarget,\n  }: React.FormEvent<HTMLTextAreaElement>) => {\n    currentTarget.style.height = '75px';\n    currentTarget.style.height = `${currentTarget.scrollHeight}px`;\n  };\n\n  return (\n    <StyledRow light={light}>\n      <SerialColumn>{index}</SerialColumn>\n      <MiddleColumn>\n        <NameSection light={light}>\n          <MedicineName entered={entered} removed={removed} />\n          <div style={{ width: '101px' }}>\n            <Input\n              style={{ width: '100px' }}\n              type='text'\n              placeholder='Quantity'\n            />\n          </div>\n        </NameSection>\n        <Dosage light={light}>\n          <DailyQuantities rowIndex={index} light={light} />\n        </Dosage>\n      </MiddleColumn>\n      <NotesColumn>\n        <TextArea light={light} placeholder='Notes' onInput={onTextAreaInput} />\n      </NotesColumn>\n    </StyledRow>\n  );\n};\n","import React, { useState } from 'react';\n\nimport { Row } from './Row';\nimport {\n  MiddleColumn,\n  NotesColumn,\n  SerialColumn,\n  Table,\n  HeaderRow,\n} from './Table';\n\nexport const Prescription = () => {\n  const [size, setSize] = useState(2);\n\n  return (\n    <Table>\n      <HeaderRow>\n        <SerialColumn>No.</SerialColumn>\n        <MiddleColumn>Medicine and Dosage</MiddleColumn>\n        <NotesColumn>Notes</NotesColumn>\n      </HeaderRow>\n      {Array(size)\n        .fill('')\n        .map((_, i) => {\n          const index = i + 1;\n          const entered = ({\n            target: { value },\n          }: React.ChangeEvent<HTMLInputElement>) => {\n            if (index === size) {\n              setSize(size + 1);\n            }\n          };\n\n          const removed = ({\n            target: { value },\n          }: React.ChangeEvent<HTMLInputElement>) => {\n            if (index !== 1 && index === size - 1 && value.length === 0) {\n              setSize(size - 1);\n            }\n          };\n\n          return (\n            <Row\n              key={`row-key-${index}`}\n              index={index}\n              size={size}\n              entered={entered}\n              removed={removed}\n            />\n          );\n        })}\n    </Table>\n  );\n};\n","import React from 'react';\n\nimport { Label } from './Label';\nimport { Prescription } from './Prescription';\n\nconst labels: Array<string> = ['Diagnosis', 'Procedure\\u202fdone'];\n\nexport const Sheet = () => {\n  return (\n    <>\n      <div>\n        {labels.map((name) => {\n          return <Label name={name} key={name} />;\n        })}\n      </div>\n      <div style={{ fontSize: '50px' }}>{'\\u211E'}</div>\n      <div>\n        <Prescription />\n      </div>\n      <div style={{ paddingTop: '50px' }}>\n        <Label name='Instructions' />\n      </div>\n    </>\n  );\n};\n","export const height = 275;\nexport const width = 375;\nexport const offset = 40;\n\nexport const DEFAULT = -30;\n\nexport const X_AXIS = ['125', '250', '500', '1k', '2k', '4k', '6k'];\nexport const Y_AXIS = ['120', '100', '80', '60', '40', '20', '0', '-20'];\n\nexport const xInc = (width - 2 * offset) / X_AXIS.length;\nexport const yInc = (height - 2 * offset) / (Y_AXIS.length - 1);\n\nexport const calcX = (index: number): number => {\n  return offset + (index + 1) * xInc;\n};\n\nexport const calcY = (value: number): number => {\n  return offset + ((value / 10) * yInc) / 2 + yInc;\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport {\n  X_AXIS,\n  Y_AXIS,\n  width,\n  height,\n  offset,\n  xInc,\n  yInc,\n  calcX,\n  calcY,\n  DEFAULT,\n} from '../../js/chart-utils';\n\nconst Legend = styled.g`\n  font-size: 10px;\n  & > text {\n  }\n`;\n\nconst Axis = styled.g`\n  & > line {\n    stroke: black;\n  }\n`;\n\nconst AxisTitle = styled.g`\n  font-size: 12px;\n`;\n\nconst AxisLabel = styled.g`\n  font-size: 14px;\n`;\n\nconst RightAir = styled.g`\n  & > circle {\n    fill: white;\n    stroke: red;\n  }\n  & > polyline {\n    stroke: red;\n    fill: none;\n  }\n`;\n\nconst RightBone = styled(RightAir)`\n  & > polyline {\n    stroke-dasharray: 5;\n  }\n`;\n\nconst LeftAir = styled.g`\n  font: bold 15px arial;\n  & > text {\n    fill: blue;\n  }\n  & > polyline {\n    stroke: blue;\n  }\n`;\n\nconst LeftBone = styled(LeftAir)`\n  & > polyline {\n    stroke-dasharray: 5;\n  }\n`;\n\nconst subAxisStyle = {\n  strokeWidth: '1px',\n  stroke: 'darkgrey',\n  strokeDasharray: '1',\n  fill: 'none',\n};\n\nconst subSubAxisStyle = {\n  ...subAxisStyle,\n  stroke: 'lightgrey',\n};\n\ntype GraphType = {\n  points: {\n    [key: string]: number;\n  };\n  pointLine: string;\n};\n\ntype SideType = {\n  air: GraphType;\n  bone: GraphType;\n};\n\ntype ChartType = {\n  right: SideType;\n  left: SideType;\n};\n\nexport const Chart = ({ right, left }: ChartType) => {\n  return (\n    <svg\n      version='1.2'\n      role='img'\n      style={{\n        height: `${height}`,\n        width: `${width}`,\n      }}\n      transform='translate(20,0)'\n    >\n      <Legend transform='translate(50,5)'>\n        <text x='0' y='10'>\n          Right Air\n        </text>\n        <line x1='60' y1='7' x2='110' y2='7' stroke='red' fill='none' />\n        <circle cx='85' cy='7' r='3' stroke='red' fill='white' />\n        <text x='0' y='25'>\n          Right Bone\n        </text>\n        <line\n          x1='60'\n          y1='22'\n          x2='110'\n          y2='22'\n          stroke='red'\n          strokeDasharray='4'\n          fill='none'\n        />\n        <circle cx='85' cy='22' r='3' stroke='red' fill='white' />\n        <text x='150' y='10'>\n          Left Air\n        </text>\n        <line x1='210' y1='7' x2='260' y2='7' stroke='blue' fill='none' />\n        <text\n          x='235'\n          y='10.5'\n          style={{ font: 'bold 15px arial', color: 'blue' }}\n          fill='blue'\n          textAnchor='middle'\n        >\n          x\n        </text>\n        <text x='150' y='25'>\n          Left Bone\n        </text>\n        <line\n          x1='210'\n          y1='22'\n          x2='260'\n          y2='22'\n          stroke='blue'\n          strokeDasharray='4'\n          fill='none'\n        />\n        <text\n          x='235'\n          y='25.5'\n          style={{ font: 'bold 15px arial', color: 'blue' }}\n          fill='blue'\n          textAnchor='middle'\n        >\n          x\n        </text>\n      </Legend>\n      <Axis>\n        {/* Y Axis Helpers */}\n        {X_AXIS.map((key, index) => {\n          const x = offset + (index + 1) * xInc;\n          return (\n            <line\n              key={key}\n              style={subAxisStyle}\n              x1={x}\n              y1={offset}\n              x2={x}\n              y2={height - offset}\n            />\n          );\n        })}\n        {X_AXIS.map((key, index) => {\n          const x = offset + (index + 1) * xInc - xInc / 2;\n          return (\n            <line\n              key={key}\n              style={subSubAxisStyle}\n              x1={x}\n              y1={offset}\n              x2={x}\n              y2={height - offset}\n            />\n          );\n        })}\n        {/* X Axis Helpers */}\n        {Y_AXIS.map((key, index) => {\n          const y = height - offset - (index + 1) * yInc;\n          return index !== Y_AXIS.length - 1 ? (\n            <line\n              key={key}\n              style={subAxisStyle}\n              x1={offset}\n              y1={y}\n              x2={width - offset}\n              y2={y}\n            />\n          ) : null;\n        })}\n        {Y_AXIS.map((key, index) => {\n          const y = height - offset - (index + 1) * yInc + yInc / 2;\n          return index !== Y_AXIS.length - 1 ? (\n            <line\n              key={key}\n              style={subSubAxisStyle}\n              x1={offset}\n              y1={y}\n              x2={width - offset}\n              y2={y}\n            />\n          ) : null;\n        })}\n        {/* X Axis */}\n        <line\n          x1={offset}\n          y1={height - offset}\n          x2={width - offset}\n          y2={height - offset}\n        />\n        {/* Y Axis */}\n        <line x1={offset} y1={offset} x2={offset} y2={height - offset} />\n      </Axis>\n      <AxisLabel>\n        {X_AXIS.map((key, index) => {\n          const x = offset + (index + 1) * xInc;\n          return (\n            <text key={key} x={x} y={height - offset + 13} textAnchor='middle'>\n              {key}\n            </text>\n          );\n        })}\n        {Y_AXIS.map((key, index) => {\n          const y = height - offset - index * yInc + 4;\n          return (\n            <text key={key} x={offset - 4} y={y} textAnchor='end'>\n              {key}\n            </text>\n          );\n        })}\n      </AxisLabel>\n      <AxisTitle>\n        <text\n          x={offset - 25}\n          y={height / 2}\n          textAnchor='middle'\n          transform={`rotate(-90, ${offset - 25}, ${height / 2})`}\n        >\n          Intensity (db)\n        </text>\n        <text x={width / 2} y={height - offset + 30} textAnchor='middle'>\n          Frequency (Hz)\n        </text>\n      </AxisTitle>\n      <RightAir>\n        <polyline points={right.air.pointLine} />\n        {X_AXIS.map((x, index) => {\n          const cx = calcX(index);\n          const cy = calcY(right.air.points[x]);\n          return right.air.points[x] === DEFAULT ? null : (\n            <circle key={x} cx={cx} cy={cy} r='3' />\n          );\n        })}\n      </RightAir>\n      <RightBone>\n        <polyline points={right.bone.pointLine} />\n        {X_AXIS.map((x, index) => {\n          const cx = calcX(index);\n          const cy = calcY(right.bone.points[x]);\n          return right.bone.points[x] === DEFAULT ? null : (\n            <circle key={x} cx={cx} cy={cy} r='3' />\n          );\n        })}\n      </RightBone>\n      <LeftAir>\n        {X_AXIS.map((x, index) => {\n          const cx = calcX(index);\n          const cy = calcY(left.air.points[x]) + 4.5;\n          return left.air.points[x] === DEFAULT ? null : (\n            <text key={x} x={cx} y={cy} textAnchor='middle'>\n              x\n            </text>\n          );\n        })}\n        <polyline fill='none' points={left.air.pointLine} />\n      </LeftAir>\n      <LeftBone>\n        {X_AXIS.map((x, index) => {\n          const cx = calcX(index);\n          const cy = calcY(left.bone.points[x]) + 4.5;\n          return left.bone.points[x] === DEFAULT ? null : (\n            <text key={x} x={cx} y={cy} textAnchor='middle'>\n              x\n            </text>\n          );\n        })}\n        <polyline fill='none' points={left.bone.pointLine} />\n      </LeftBone>\n    </svg>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nimport { Chart } from './Chart';\nimport { X_AXIS, calcX, calcY, DEFAULT } from '../../js/chart-utils';\n\ntype StateType = {\n  [key: string]: number;\n};\n\nconst initialState: StateType = X_AXIS.reduce(\n  (o, key) => ({ ...o, [key]: DEFAULT }),\n  {}\n);\n\nconst Entry = styled.div`\n  @media print {\n    visibility: hidden;\n  }\n`;\n\nconst Cell = styled.div`\n  width: 60px;\n  text-align: center;\n  & > input[type='number'] {\n    width: 55px;\n    border: none;\n    text-align: center;\n    &::-webkit-outer-spin-button,\n    &::-webkit-inner-spin-button {\n      opacity: 1;\n    }\n  }\n`;\n\nconst NumberInput = styled.input.attrs((_) => ({\n  type: 'number',\n  placeholder: '0',\n  min: -20,\n  max: 99,\n  step: 5,\n}))`\n  font-size: 17px;\n  line-height: inherit;\n  position: relative;\n  width: 100%;\n  border: none;\n  text-align: center;\n  z-index: 1;\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    opacity: 1;\n  }\n  &:focus {\n    z-index: 2;\n  }\n`;\n\nconst setPointLine = (\n  state: StateType,\n  setState: (value: React.SetStateAction<string>) => void\n): void => {\n  const points = X_AXIS.reduce((acc, curr, index) => {\n    if (state[curr] > DEFAULT) {\n      const cx = calcX(index);\n      const cy = calcY(state[curr]);\n      return acc + ' ' + cx + ',' + cy;\n    } else {\n      return acc;\n    }\n  }, '');\n  setState(points);\n};\n\nconst setPoint = (\n  key: string,\n  value: string,\n  state: StateType,\n  setState: (value: React.SetStateAction<StateType>) => void\n): void => {\n  setState({ ...state, [key]: +value });\n};\n\nexport const Audiogram = () => {\n  const [rightAirPoints, setRightAirPoints] = useState(initialState);\n  const [rightAirPointLine, setRightAirPointLine] = useState('');\n  useEffect(() => setPointLine(rightAirPoints, setRightAirPointLine), [\n    rightAirPoints,\n  ]);\n\n  const [rightBonePoints, setRightBonePoints] = useState(initialState);\n  const [rightBonePointLine, setRightBonePointLine] = useState('');\n  useEffect(() => setPointLine(rightBonePoints, setRightBonePointLine), [\n    rightBonePoints,\n  ]);\n\n  const [leftAirPoints, setLeftAirPoints] = useState(initialState);\n  const [leftPointLine, setLeftPointLine] = useState('');\n  useEffect(() => setPointLine(leftAirPoints, setLeftPointLine), [\n    leftAirPoints,\n  ]);\n\n  const [leftBonePoints, setLeftBonePoints] = useState(initialState);\n  const [leftBonePointLine, setLeftBonePointLine] = useState('');\n  useEffect(() => setPointLine(leftBonePoints, setLeftBonePointLine), [\n    leftBonePoints,\n  ]);\n\n  const ChartProps = {\n    right: {\n      air: {\n        points: rightAirPoints,\n        pointLine: rightAirPointLine,\n      },\n      bone: {\n        points: rightBonePoints,\n        pointLine: rightBonePointLine,\n      },\n    },\n    left: {\n      air: {\n        points: leftAirPoints,\n        pointLine: leftPointLine,\n      },\n      bone: {\n        points: leftBonePoints,\n        pointLine: leftBonePointLine,\n      },\n    },\n  };\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        paddingTop: '20px',\n      }}\n    >\n      <Entry>\n        {/* Header */}\n        <div style={{ display: 'flex', borderBottom: '1px solid lightgrey' }}>\n          <Cell\n            style={{\n              textAlign: 'right',\n              borderRight: '1px solid lightgrey',\n              paddingRight: '5px',\n              lineHeight: '50px',\n            }}\n          >\n            Freq\n          </Cell>\n          <div>\n            <div style={{ width: '120px', textAlign: 'center' }}>Right</div>\n            <div style={{ display: 'flex' }}>\n              <Cell>Air</Cell>\n              <Cell>Bone</Cell>\n            </div>\n          </div>\n          <div>\n            <div style={{ width: '120px', textAlign: 'center' }}>Left</div>\n            <div style={{ display: 'flex' }}>\n              <Cell>Air</Cell>\n              <Cell>Bone</Cell>\n            </div>\n          </div>\n        </div>\n        {/* Body/Content */}\n        <div style={{ display: 'flex' }}>\n          <Cell\n            style={{ borderRight: '1px solid lightgrey', paddingRight: '5px' }}\n          >\n            {X_AXIS.map((x) => (\n              <div key={x} style={{ height: '27px', textAlign: 'right' }}>\n                {x}\n              </div>\n            ))}\n          </Cell>\n          {[\n            { state: rightAirPoints, setState: setRightAirPoints },\n            { state: rightBonePoints, setState: setRightBonePoints },\n            { state: leftAirPoints, setState: setLeftAirPoints },\n            { state: leftBonePoints, setState: setLeftBonePoints },\n          ].map((o, i) => (\n            <div key={`div-${o}-${i}`}>\n              {X_AXIS.map((x) => (\n                <Cell key={`cell-${o}-${i}-${x}`}>\n                  <NumberInput\n                    onChange={({ target: { value } }) =>\n                      setPoint(x, value, o.state, o.setState)\n                    }\n                  />\n                </Cell>\n              ))}\n            </div>\n          ))}\n        </div>\n      </Entry>\n      <div>\n        <Chart {...ChartProps} />\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { Label } from '../prescription/Label';\n\nconst Input = styled.input.attrs((_) => ({\n  type: 'text',\n}))`\n  width: 50px;\n  border: none;\n  border-bottom: 1px dotted grey;\n  text-align: left;\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    opacity: 1;\n  }\n  &:focus {\n    outline: transparent;\n    border-bottom: 1px solid gray;\n  }\n  @media print {\n    border: none;\n    &:focus {\n      border: none;\n      outline: none;\n    }\n    &::placeholder {\n      color: transparent;\n    }\n\n    &::-webkit-outer-spin-button,\n    &::-webkit-inner-spin-button {\n      -webkit-appearance: none;\n      margin: 0;\n    }\n  }\n`;\n\nconst Top = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  & > div {\n    padding-left: 20px;\n  }\n`;\n\ntype StateType = {\n  fileNo: string;\n  opdNo: string;\n  Name: string;\n};\n\nconst initState: StateType = {\n  fileNo: '',\n  opdNo: '',\n  Name: '',\n};\n\ntype CommonProps = {\n  clear: boolean;\n};\n\nexport const Common = ({ clear }: CommonProps) => {\n  const date = new Date().toLocaleDateString('en-IN');\n\n  const [state, setState] = useState(initState);\n\n  useEffect(() => {\n    if (clear) {\n      setState(initState);\n    }\n  }, [clear]);\n\n  const onChange = ({\n    target: { name, value },\n  }: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const newState = { ...state, [name]: value } as StateType;\n    setState(newState);\n  };\n\n  return (\n    <>\n      <Top>\n        <div>\n          <label>\n            File No:{' '}\n            <Input name='fileNo' value={state.fileNo} onChange={onChange} />\n          </label>\n        </div>\n        <div>\n          <label>\n            OPD No:{' '}\n            <Input name='opdNo' value={state.opdNo} onChange={onChange} />\n          </label>\n        </div>\n        <div>Date: {date}</div>\n      </Top>\n      <div>\n        <Label name='Name' value={state.Name} onChange={onChange} />\n      </div>\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { BrowserRouter, Link, Route, Switch } from 'react-router-dom';\n\nimport { LetterHead } from './components/common/LetterHead';\nimport { PrintButton } from './components/common/PrintButton';\nimport { Sheet } from './components/prescription/Sheet';\nimport { Audiogram } from './components/audiogram/Audiogram';\nimport { Common } from './components/common/Common';\n\nconst OverallDiv = styled.div<{ printLetterHead: boolean }>`\n  padding-top: 10px;\n  padding-left: 50px;\n  padding-right: 50px;\n  font-size: 17px;\n  @media print {\n    padding-top: ${({ printLetterHead }) =>\n      printLetterHead ? '10mm' : '80mm'};\n  }\n`;\n\nconst Navigator = styled.div`\n  font-size: 13px;\n  position: fixed;\n  top: 10px;\n  left: 10px;\n  border-radius: 4px;\n  box-shadow: 0 0 10px gray;\n  background-color: white;\n  padding: 10px;\n  & > div {\n    border-bottom: 1px dashed grey;\n    padding-bottom: 5px;\n  }\n  & > div:hover {\n    border-bottom: 1px solid black;\n    padding-bottom: 5px;\n  }\n  & a {\n    text-decoration: none;\n  }\n  @media print {\n    display: none;\n  }\n`;\n\nexport const App = () => {\n  const [printLetterHead, setPrintLetterHead] = useState(false);\n  const [print, setPrint] = useState(false);\n\n  const [clear, setClear] = useState(false);\n\n  useEffect(() => {\n    if (print) {\n      setPrint(false);\n      window.print();\n    }\n  }, [print]);\n\n  useEffect(() => {\n    if (clear) {\n      setClear(false);\n    }\n  }, [clear]);\n\n  return (\n    <>\n      <LetterHead printLetterHead={printLetterHead} />\n      <OverallDiv printLetterHead={printLetterHead}>\n        <Common clear={clear} />\n        <BrowserRouter>\n          <Navigator>\n            <div>\n              <Link to='/' onClick={() => setClear(true)}>\n                <div>Clear</div>\n              </Link>\n            </div>\n            <div>\n              <Link to='/precription'>\n                <div>Prescription</div>\n              </Link>\n            </div>\n            <div>\n              <Link to='/audiogram'>\n                <div>Audiogram</div>\n              </Link>\n            </div>\n          </Navigator>\n          <Switch>\n            <Route path='/precription'>\n              <Sheet />\n            </Route>\n            <Route path='/audiogram'>\n              <Audiogram />\n            </Route>\n            <Route path='/'>{null}</Route>\n          </Switch>\n        </BrowserRouter>\n      </OverallDiv>\n      <PrintButton\n        setPrintLetterHead={setPrintLetterHead}\n        setPrint={setPrint}\n      />\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}