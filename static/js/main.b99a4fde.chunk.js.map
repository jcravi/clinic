{"version":3,"sources":["components/common/LetterHead.tsx","slices/clear.ts","slices/letterHead.ts","slices/print.ts","components/common/PrintButton.tsx","components/common/CommonComponents.tsx","components/common/Label.tsx","components/prescription/DailyQuantities.tsx","components/prescription/Input.tsx","components/prescription/MedicineName.tsx","utils/search.ts","components/prescription/Table.tsx","components/prescription/Row.tsx","slices/sheet.ts","components/prescription/Prescription.tsx","components/prescription/Sheet.tsx","contants/chart.ts","utils/chart-utils.ts","components/audiogram/Chart.tsx","slices/audiogram.ts","slices/chart.ts","components/audiogram/Audiogram.tsx","slices/common.ts","components/common/Common.tsx","App.tsx","slices/index.ts","index.tsx"],"names":["Container","styled","div","printLetterHead","Title","Content","Address","LetterHead","connect","letterHead","name","degrees","reg","days","times1","times2","print","style","fontSize","fontWeight","textAlign","clear","createAction","initialState","slice","createSlice","reducers","state","payload","extraReducers","builder","addCase","actions","letterHeadReducer","reducer","startedPrint","printReducer","ButtonPlacement","StyledButton","button","mapDispatch","PrintButton","useEffect","window","onClick","e","StyledLabel","label","TextArea","textarea","Label","inputName","value","onChange","ref","useRef","current","height","scrollHeight","Div","light","NumberInput","input","attrs","_","type","placeholder","min","max","DateInput","Item","ItemDate","DailyQuantities","rowIndex","dosages","onDosageChange","addDosage","removeDosage","paddingLeft","map","i","key","dosage","changedDates","target","length","removedDate","DailyQuantityRow","timeOfDay","time","useState","times","setTimes","index","toLowerCase","event","timesCopy","onBlur","dates","Input","AutoCompleteContainer","AutoCompleteItems","AutoCompleteItem","highlighted","hover","MedicineName","entered","removed","choices","setChoices","selected","setSelected","setHover","setName","reset","onMouseMove","setInput","medicine","form","width","autoComplete","onKeyUp","newSelected","test","names","userEntered","array","val","replace","lowerVal","words","split","wordsLower","rexStr","join","rexCase","RegExp","rex","medicines","item","score","searchStr","startsWith","searchStrLower","includes","word","push","filter","x","sort","a","b","search","console","log","choice","onMouseDown","generic","Table","Column","SerialColumn","MiddleColumn","NotesColumn","TableRow","HeaderRow","StyledRow","Dosage","NameSection","Row","size","medicineName","quantity","notes","onChangeMedicineName","initialDosage","morning","afternoon","night","initialPrescription","diagnosis","procedureDone","instructions","prescriptions","setSheetInput","addPrescription","removePrescription","pop","setPrescription","setDosage","pIndex","sheetReducer","Prescription","sheet","RowProps","dosageIndex","Sheet","paddingTop","X_AXIS","Y_AXIS","X_INCREMENT","Y_INCREMENT","calcX","calcY","toPointsLine","points","reduce","acc","curr","Legend","g","Axis","AxisTitle","AxisLabel","RightAir","RightBone","LeftAir","LeftBone","subAxisStyle","strokeWidth","stroke","strokeDasharray","fill","subSubAxisStyle","Chart","chart","rightAir","rightBone","leftAir","leftBone","version","role","transform","y","x1","y1","x2","y2","cx","cy","r","font","color","textAnchor","HEIGHT","WIDTH","OFFSET","remarks","hearingAidTrial","setAudiogramInput","audiogramReducer","initialPoints","o","setPoint","sideKey","chartReducer","ChartContainer","Entry","Cell","step","Audiogram","audiogram","arr","display","borderBottom","borderRight","paddingRight","lineHeight","fileNo","opdNo","ageSex","address","setCommonInput","commonReducer","Top","setCommon","Common","common","date","Date","toLocaleDateString","maxLength","alignItems","OverallDiv","Navigator","App","to","path","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b99a4fde.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\nimport { RootStateType } from '../../slices';\n\nconst Container = styled.div<{ printLetterHead: boolean }>`\n  margin-left: 30px;\n  margin-right: 30px;\n  margin-top: 10px;\n  display: block;\n  @media print {\n    display: ${({ printLetterHead }) => (printLetterHead ? 'block' : 'none')};\n  }\n`;\n\nconst Title = styled.div`\n  text-align: center;\n  font-size: 30px;\n  font-weight: bold;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Address = styled.div`\n  text-align: center;\n  font-size: 13px;\n  font-weight: bold;\n\n  margin-top: 5px;\n\n  padding-top: 2px;\n  padding-bottom: 2px;\n\n  border-top: 2px solid black;\n  border-bottom: 2px solid black;\n`;\n\nconst LetterHeadComponent = ({\n  name,\n  degrees,\n  reg,\n  days,\n  times1,\n  times2,\n  print,\n}: ReturnType<typeof mapState>) => {\n  return (\n    <Container printLetterHead={print}>\n      <Title>JK Holistic Ear Nose Throat &amp; Head-Neck Clinic</Title>\n      <Content>\n        <div>\n          <div style={{ fontSize: '20px', fontWeight: 'bold' }}>{name}</div>\n          <div>{degrees}</div>\n          <div>Reg. No: {reg}</div>\n        </div>\n        <div style={{ textAlign: 'right' }}>\n          <div>{days}</div>\n          <div>{times1}</div>\n          <div>{times2}</div>\n        </div>\n      </Content>\n      <Address>\n        45,46 Panvel City Centre, Ground Floor, Dr. B. Ambedkar Road,\n        Panvel-410206. Tel: 022-27456244 Mob: 9324796638\n      </Address>\n    </Container>\n  );\n};\n\nconst mapState = ({\n  letterHead: { name, degrees, reg, days, times1, times2, print },\n}: RootStateType) => ({\n  name,\n  degrees,\n  reg,\n  days,\n  times1,\n  times2,\n  print,\n});\n\nexport const LetterHead = connect(mapState)(LetterHeadComponent);\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const clear = createAction('clear');\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { clear } from './clear';\n\nexport interface LetterHeadStateType {\n  name: string;\n  degrees: string;\n  reg: string;\n  days: string;\n  times1: string;\n  times2: string;\n  print: boolean;\n}\n\nconst initialState: LetterHeadStateType = {\n  name: 'Dr. Janardhan N. C.',\n  degrees: 'MBBS, MS(ENT), DORL, PGDHHCM',\n  reg: '45341',\n  days: 'Mon/Wed/Thur/Sat',\n  times1: '10 am to 1 pm',\n  times2: '5 pm to 8 pm',\n  print: false,\n};\n\nconst slice = createSlice({\n  name: 'letterHead',\n  initialState,\n  reducers: {\n    printLetterHead: (state, { payload }: PayloadAction<boolean>) => {\n      state.print = payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(clear, () => initialState);\n  },\n});\n\nexport const { printLetterHead } = slice.actions;\nexport const { reducer: letterHeadReducer } = slice;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { clear } from './clear';\nimport { printLetterHead } from './letterHead';\n\nconst initialState: boolean = false;\n\nconst slice = createSlice({\n  name: 'print',\n  initialState,\n  reducers: {\n    startedPrint: () => false,\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(clear, () => initialState)\n      .addCase(printLetterHead, () => true);\n  },\n});\n\nexport const { startedPrint } = slice.actions;\nexport const { reducer: printReducer } = slice;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\nimport { RootStateType } from '../../slices';\nimport { startedPrint } from '../../slices/print';\nimport { printLetterHead } from '../../slices/letterHead';\n\nconst ButtonPlacement = styled.div`\n  position: fixed;\n  top: 10px;\n  right: 10px;\n\n  font-weight: bold;\n  & > div {\n    text-align: right;\n    margin-bottom: 10px;\n  }\n`;\n\nconst StyledButton = styled.button`\n  padding: 4px 10px;\n  text-decoration: none;\n  border-radius: 4px;\n  border: 1px solid gray;\n  background: linear-gradient(to bottom, whitesmoke 0%, lightgray 100%);\n\n  &:hover {\n    border-color: black;\n    background: linear-gradient(to bottom, lightgray 0%, whitesmoke 100%);\n  }\n  &:active {\n    top: 11px;\n  }\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 10px gray;\n  }\n\n  @media print {\n    display: none;\n  }\n`;\n\nconst PrintButtonComponent = ({\n  printLetterHead,\n  startedPrint,\n  print,\n}: ReturnType<typeof mapState> & typeof mapDispatch) => {\n  useEffect(() => {\n    if (print) {\n      startedPrint();\n      window.print();\n    }\n  }, [print, startedPrint]);\n\n  return (\n    <ButtonPlacement>\n      <div>\n        <StyledButton onClick={() => printLetterHead(true)}>\n          &#128438; LetterHead\n        </StyledButton>\n      </div>\n      <div>\n        <StyledButton onClick={(e) => printLetterHead(false)}>\n          &#128438; Print\n        </StyledButton>\n      </div>\n    </ButtonPlacement>\n  );\n};\n\nconst mapState = ({ print }: RootStateType) => ({\n  print,\n});\n\nconst mapDispatch = {\n  printLetterHead,\n  startedPrint,\n};\n\nexport const PrintButton = connect(mapState, mapDispatch)(PrintButtonComponent);\n","import styled from 'styled-components';\n\nexport const StyledLabel = styled.label`\n  font-weight: bold;\n  display: flex;\n  align-items: flex-start;\n`;\n\nexport const TextArea = styled.textarea`\n  vertical-align: top;\n  width: 100%;\n  height: 27px;\n  border: none;\n  border-bottom: 1px dotted gray;\n  overflow: hidden;\n  padding-top: 0px;\n  resize: vertical;\n  &::-webkit-resizer {\n    display: none;\n  }\n  &:focus {\n    outline: transparent;\n    border-bottom: 1px solid gray;\n  }\n  @media print {\n    border: none;\n    &:focus {\n      outline: none;\n      border: none;\n    }\n    &::placeholder {\n      color: transparent;\n    }\n  }\n`;\n","import React, { useEffect, useRef } from 'react';\nimport { StyledLabel, TextArea } from './CommonComponents';\n\ntype LabelProps = {\n  name: string;\n  inputName?: string;\n  value?: string;\n  onChange?: (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => void;\n};\n\nexport const Label = ({ inputName, name, value, onChange }: LabelProps) => {\n  const ref = useRef<HTMLTextAreaElement>(null);\n\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.style.height = '27px';\n      ref.current.style.height = `${ref.current.scrollHeight}px`;\n    }\n  }, [value]);\n\n  return (\n    <div>\n      <StyledLabel>\n        {name}:&nbsp;\n        <TextArea\n          ref={ref}\n          name={inputName || name}\n          onChange={onChange}\n          value={value}\n        />\n      </StyledLabel>\n    </div>\n  );\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport styled from 'styled-components';\nimport { DosageStateType } from '../../slices/sheet';\n\nconst Div = styled.div<{ light: boolean }>`\n  display: flex;\n  border-top: ${({ light }) =>\n    light ? '1px dotted lightgray' : '1px dotted gray'};\n  @media print {\n    border-top: none;\n  }\n`;\n\nconst NumberInput = styled.input.attrs((_) => ({\n  type: 'number',\n  placeholder: '0',\n  min: 0,\n  max: 99,\n}))`\n  width: 40px;\n  border: none;\n  text-align: center;\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    opacity: 1;\n  }\n  @media print {\n    &:focus {\n      border: none;\n      outline: none;\n    }\n    &::placeholder {\n      color: transparent;\n    }\n\n    &::-webkit-outer-spin-button,\n    &::-webkit-inner-spin-button {\n      -webkit-appearance: none;\n      margin: 0;\n    }\n  }\n`;\n\nconst DateInput = styled.input`\n  width: 100%;\n  border: none;\n  position: relative;\n  z-index: 1;\n  &:focus {\n    z-index: 2;\n  }\n  @media print {\n    &:focus {\n      outline: none;\n    }\n    &::placeholder {\n      color: transparent;\n    }\n  }\n`;\n\nconst Item = styled.div<{ light: boolean }>`\n  width: 120px;\n  text-align: center;\n  @media print {\n    visibility: ${({ light }) => (light ? 'hidden' : 'visible')};\n  }\n`;\n\nconst ItemDate = styled.div`\n  flex-grow: 1;\n  padding-left: 10px;\n  text-align: left;\n  & input {\n    text-align: left;\n  }\n`;\n\ntype DailyQuantitiesProps = {\n  rowIndex: number;\n  light: boolean;\n  dosages: Array<DosageStateType>;\n  onDosageChange: (index: number, name: string, value: string) => void;\n  addDosage: () => void;\n  removeDosage: () => void;\n};\n\nexport const DailyQuantities = ({\n  rowIndex,\n  light,\n  dosages,\n  onDosageChange,\n  addDosage,\n  removeDosage,\n}: DailyQuantitiesProps) => {\n  return (\n    <>\n      <Div light={light}>\n        <Item light={light}>Morning</Item>\n        <Item light={light}>Afternoon</Item>\n        <Item light={light}>Night</Item>\n        <ItemDate style={{ paddingLeft: '10px', textAlign: 'left' }}>\n          Dates\n        </ItemDate>\n      </Div>\n      {dosages.map((_, i) => {\n        const changedDates = ({\n          target: { value },\n        }: React.ChangeEvent<HTMLInputElement>) => {\n          if (i === dosages.length - 1 && value.length !== 0) {\n            addDosage();\n          }\n        };\n        const removedDate = ({\n          target: { value },\n        }: React.ChangeEvent<HTMLInputElement>) => {\n          if (i !== dosages.length - 1 && value.length === 0) {\n            removeDosage();\n          }\n        };\n\n        const onChange = ({\n          target: { name, value },\n        }: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n          onDosageChange(i, name as keyof DosageStateType, value);\n        };\n        return (\n          <DailyQuantityRow\n            key={`daily-${rowIndex}-${i}`}\n            light={light}\n            dosage={dosages[i]}\n            changedDates={changedDates}\n            removedDate={removedDate}\n            onChange={onChange}\n          />\n        );\n      })}\n    </>\n  );\n};\n\ntype DailyQuantityRowProps = {\n  light: boolean;\n  dosage: DosageStateType;\n  changedDates: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  removedDate: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onChange: (\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => void;\n};\n\nconst DailyQuantityRow = ({\n  light,\n  changedDates,\n  removedDate,\n  dosage,\n  onChange,\n}: DailyQuantityRowProps) => {\n  const timeOfDay = ['Morning', 'Afternoon', 'Night'].map((time) => ({\n    time,\n    light: true,\n  }));\n  const [times, setTimes] = useState(timeOfDay);\n\n  const onChangeDates = (event: React.ChangeEvent<HTMLInputElement>) => {\n    onChange(event);\n    changedDates(event);\n  };\n\n  return (\n    <Div light={light}>\n      {times.map(({ time, light }, index) => {\n        const handleChanged = (event: ChangeEvent<HTMLInputElement>) => {\n          onChange(event);\n          const {\n            target: { value },\n          } = event;\n          const timesCopy = [...times];\n          timesCopy[index] = {\n            time,\n            light: value === '0',\n          };\n          setTimes(timesCopy);\n        };\n        const name = time.toLowerCase() as keyof DosageStateType;\n        return (\n          <Item key={time} light={light}>\n            <NumberInput\n              onChange={handleChanged}\n              name={name}\n              value={dosage[name]}\n            />\n          </Item>\n        );\n      })}\n      <ItemDate>\n        <DateInput\n          placeholder='Dates'\n          onChange={onChangeDates}\n          onBlur={removedDate}\n          name='dates'\n          value={dosage.dates}\n        />\n      </ItemDate>\n    </Div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  border: none;\n  padding-top: 0px;\n  padding-bottom: 0px;\n  @media print {\n    &:focus {\n      outline: none;\n    }\n    &::placeholder {\n      color: transparent;\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport { search, SearchResult } from '../../utils/search';\nimport { Input } from './Input';\n\nconst AutoCompleteContainer = styled.div`\n  position: relative;\n  flex-grow: 2;\n  text-align: left;\n`;\n\nconst AutoCompleteItems = styled.div`\n  position: absolute;\n  border: 1px solid lightgray;\n  border-bottom: none;\n  border-top: none;\n  z-index: 99;\n  /*position the autocomplete items to be the same width as the container:*/\n  top: 100%;\n  left: -20px;\n  right: 0;\n  box-shadow: 0px 3px 10px gray;\n  width: 130%;\n  @media print {\n    display: none;\n  }\n`;\n\nconst AutoCompleteItem = styled.div<{ highlighted: boolean; hover: boolean }>`\n  text-align: left !important;\n  padding: 3px;\n  cursor: pointer;\n  background-color: ${({ highlighted }) =>\n    highlighted ? 'lightgray' : 'whitesmoke'};\n  border-bottom: 1px solid gray;\n  &:hover {\n    background-color: ${({ highlighted, hover }) =>\n      hover ? 'lightgray' : highlighted ? 'lightgray' : 'whitesmoke'};\n  }\n  & span {\n    font-style: italic;\n  }\n`;\n\ntype Props = {\n  entered: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  removed: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string;\n  onChange: (value: string) => void;\n};\n\nexport const MedicineName = ({ entered, removed, value, onChange }: Props) => {\n  const [choices, setChoices] = useState<Array<SearchResult>>([]);\n  const [selected, setSelected] = useState<number>(-1);\n  const [hover, setHover] = useState(true);\n\n  const setName = (value: string) => {\n    onChange(value);\n  };\n\n  const reset = () => {\n    setChoices([]);\n    setSelected(-1);\n  };\n\n  const onKeyUp = ({ key }: React.KeyboardEvent<HTMLInputElement>): void => {\n    if (key === 'Escape') {\n      reset();\n    } else if (key === 'ArrowUp') {\n      const newSelected = selected <= 0 ? choices.length - 1 : selected - 1;\n      setSelected(newSelected);\n      setHover(false);\n    } else if (key === 'ArrowDown') {\n      const newSelected = selected >= choices.length - 1 ? 0 : selected + 1;\n      setSelected(newSelected);\n      setHover(false);\n    } else if (key === 'Enter') {\n      if (selected >= 0) {\n        setInput(choices[selected]);\n        reset();\n      }\n    } else if (/[a-z0-9]/i.test(key) || key === 'Backspace') {\n      if (value.length > 0) {\n        const names = search(value).slice(0, 10);\n        setChoices(names);\n      } else {\n        reset();\n      }\n    } else {\n      console.log('SOMETHING ELSE', `\"${key}\"`);\n    }\n  };\n\n  const onBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    removed(event);\n    reset();\n  };\n\n  const onMouseMove = () => {\n    setSelected(-1);\n    setHover(true);\n  };\n\n  const setInput = (medicine: SearchResult) => {\n    setName(`${medicine.form} ${medicine.name}`);\n  };\n\n  return (\n    <AutoCompleteContainer>\n      <Input\n        style={{ width: '100%' }}\n        type='text'\n        autoComplete='off'\n        placeholder='Medicine Name, Type &amp; Strength'\n        onChange={(event) => {\n          entered(event);\n          setName(event.target.value);\n        }}\n        onBlur={onBlur}\n        onKeyUp={onKeyUp}\n        value={value}\n      />\n      {choices.length !== 0 && (\n        <AutoCompleteItems>\n          {choices.map((choice, index) => {\n            const onMouseDown = () => {\n              setInput(choice);\n              reset();\n            };\n            return (\n              <AutoCompleteItem\n                key={`${choice.name}-${choice.type}-${choice.form}-${index}`}\n                highlighted={index === selected}\n                hover={hover}\n                onMouseDown={onMouseDown}\n                onMouseMove={onMouseMove}\n              >\n                {choice.type}: {choice.form} {choice.name}{' '}\n                <span>({choice.generic})</span>\n              </AutoCompleteItem>\n            );\n          })}\n        </AutoCompleteItems>\n      )}\n    </AutoCompleteContainer>\n  );\n};\n","import medicines from '../assets/medicine-array.json';\n\ntype MedicineType = {\n  type: string;\n  form: string;\n  name: string;\n  generic: string;\n  strength: string;\n  notes: string;\n};\n\nexport type SearchResult = MedicineType & {\n  searchStr: string;\n  searchStrLower: string;\n  score: number;\n};\n\nexport const search = (userEntered: string): Array<SearchResult> => {\n  const array: Array<SearchResult> = [];\n\n  // converting the word to search in multiple ways\n  const val = userEntered.replace(/[^0-9a-z ]/gi, '');\n  const lowerVal = val.toLowerCase();\n\n  const words: Array<string> = val.split(' ');\n  const wordsLower = lowerVal.split(' ');\n\n  const rexStr = '.*' + val.split('').join('.*');\n\n  const rexCase = new RegExp(rexStr);\n  const rex = new RegExp(rexStr, 'i');\n\n  // Loop only once\n  for (const item of medicines) {\n    let score = 0;\n    // full user search starts\n    if (item.searchStr.startsWith(val)) {\n      score += 5;\n    }\n\n    // full user search case insensitive start\n    if (item.searchStrLower.startsWith(lowerVal)) {\n      score += 5;\n    }\n\n    // full user search\n    if (item.searchStr.includes(val)) {\n      score += 3;\n    }\n\n    // full user search case insensitive\n    if (item.searchStrLower.includes(lowerVal)) {\n      score += 3;\n    }\n\n    // search for words\n    for (const word of words) {\n      if (item.searchStr.includes(word)) {\n        score += 2;\n      }\n    }\n\n    // search for words case insensitive\n    for (const word of wordsLower) {\n      if (item.searchStrLower.includes(word)) {\n        score += 2;\n      }\n    }\n\n    // search individual letters\n    if (rexCase.test(item.searchStr)) {\n      score++;\n    }\n\n    if (rex.test(item.searchStrLower)) {\n      score++;\n    }\n    array.push({ ...item, score });\n  }\n\n  return array.filter((x) => x.score !== 0).sort((a, b) => b.score - a.score);\n};\n","import styled from 'styled-components';\n\nexport const Table = styled.div`\n  width: 100%;\n  border: none;\n  & div {\n    border: none;\n    text-align: center;\n  }\n  @media print {\n    border: none;\n    & div {\n      border: none;\n      caret-color: transparent;\n    }\n  }\n`;\n\nconst Column = styled.div`\n  vertical-align: top;\n  border-width: 1px !important;\n  @media print {\n    border: none !important;\n  }\n`;\n\nexport const SerialColumn = styled(Column)`\n  width: 25px;\n  vertical-align: top;\n  text-align: center;\n  border-left: 1px solid gray;\n  border-right: none !important;\n`;\n\nexport const MiddleColumn = styled(Column)`\n  flex-grow: 1;\n  color: black;\n  text-align: center;\n  border-left: 1px solid gray;\n  border-right: 1px solid gray;\n`;\n\nexport const NotesColumn = styled(Column)`\n  width: 100px;\n  text-align: left;\n  border-right: 1px solid gray;\n  border-left: none !important;\n`;\n\nexport const TableRow = styled.div`\n  display: flex;\n  width: 100%;\n  & > div {\n    border-top: none !important;\n    border-bottom: none !important;\n  }\n`;\n\nexport const HeaderRow = styled(TableRow)`\n  font-weight: bold;\n`;\n","import React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\n\nimport { DosageStateType, PrescriptionTextType } from '../../slices/sheet';\nimport { DailyQuantities } from './DailyQuantities';\nimport { Input } from './Input';\nimport { MedicineName } from './MedicineName';\nimport { MiddleColumn, NotesColumn, SerialColumn, TableRow } from './Table';\n\nconst StyledRow = styled(TableRow)<{ light: boolean }>`\n  & input::placeholder {\n    color: ${({ light }) => (light ? 'lightgray' : 'darkgray')};\n  }\n\n  border-top: 1px solid darkgray !important;\n  border-bottom: ${({ light }) => (light ? '1px dotted lightgray' : 'none')};\n\n  & > div {\n    padding: 0 0 0 0;\n    border-color: ${({ light }) => (light ? 'lightgray' : 'darkgray')};\n    border-style: ${({ light }) => (light ? 'dotted' : 'solid')};\n    color: ${({ light }) => (light ? 'lightgray' : 'black')};\n  }\n\n  & input[type='number']::-webkit-outer-spin-button,\n  & input[type='number']::-webkit-inner-spin-button {\n    opacity: ${({ light }) => (light ? 0.3 : 1.0)};\n  }\n\n  @media print {\n    display: ${({ light }) => (light ? 'none' : 'auto')};\n    border: none !important;\n    border-top: 1px dotted darkgray !important;\n    & input::placeholder {\n      color: transparent;\n    }\n  }\n`;\n\nconst Dosage = styled.div<{ light: boolean }>`\n  color: ${({ light }) => (light ? 'lightgray' : 'black')};\n  border-top: 1px\n    ${({ light }) => (light ? 'dotted lightgray' : 'solid darkgray')} !important;\n  @media print {\n    border-top: none !important;\n  }\n`;\n\nconst TextArea = styled.textarea<{ light: boolean }>`\n  vertical-align: top;\n  width: 99px;\n  height: 78px;\n  border: none;\n  overflow: hidden;\n  resize: vertical;\n  padding-top: 0px;\n  padding-bottom: 0px;\n  &::placeholder {\n    color: ${({ light }) => (light ? 'lightgray' : 'darkgray')};\n  }\n  &::-webkit-resizer {\n    display: none;\n  }\n  @media print {\n    &:focus {\n      outline: none;\n    }\n    &::placeholder {\n      color: transparent;\n    }\n  }\n`;\n\nconst NameSection = styled.div<{ light: boolean }>`\n  display: flex;\n`;\n\ntype RowProps = {\n  size: number;\n  index: number;\n  entered: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  removed: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onChange: (\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => void;\n  onChangeMedicineName: (value: string) => void;\n  onDosageChange: (index: number, name: string, value: string) => void;\n  dosages: Array<DosageStateType>;\n  addDosage: () => void;\n  removeDosage: () => void;\n} & PrescriptionTextType;\n\nexport const Row = ({\n  size,\n  index,\n  entered,\n  removed,\n  medicineName,\n  quantity,\n  notes,\n  onChange,\n  onChangeMedicineName,\n  onDosageChange,\n  dosages,\n  addDosage,\n  removeDosage,\n}: RowProps) => {\n  const light = index === size - 1;\n\n  const ref = useRef<HTMLTextAreaElement>(null);\n\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.style.height = '78px';\n      ref.current.style.height = `${ref.current.scrollHeight}px`;\n    }\n  }, [notes]);\n\n  return (\n    <StyledRow light={light}>\n      <SerialColumn>{index + 1}</SerialColumn>\n      <MiddleColumn>\n        <NameSection light={light}>\n          <MedicineName\n            entered={entered}\n            removed={removed}\n            value={medicineName}\n            onChange={onChangeMedicineName}\n          />\n          <div style={{ width: '101px' }}>\n            <Input\n              style={{ width: '100px' }}\n              type='text'\n              placeholder='Quantity'\n              name='quantity'\n              value={quantity}\n              onChange={onChange}\n            />\n          </div>\n        </NameSection>\n        <Dosage light={light}>\n          <DailyQuantities\n            rowIndex={index}\n            light={light}\n            dosages={dosages}\n            addDosage={addDosage}\n            removeDosage={removeDosage}\n            onDosageChange={onDosageChange}\n          />\n        </Dosage>\n      </MiddleColumn>\n      <NotesColumn>\n        <TextArea\n          ref={ref}\n          light={light}\n          placeholder='Notes'\n          name='notes'\n          value={notes}\n          onChange={onChange}\n        />\n      </NotesColumn>\n    </StyledRow>\n  );\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { clear } from './clear';\n\nexport interface DosageStateType {\n  morning: string;\n  afternoon: string;\n  night: string;\n  dates: string;\n}\n\nexport interface PrescriptionTextType {\n  medicineName: string;\n  quantity: string;\n  notes: string;\n}\n\nexport interface SheetTextType {\n  diagnosis: string;\n  procedureDone: string;\n  instructions: string;\n}\n\nexport type SheetStateType = SheetTextType & {\n  prescriptions: Array<\n    PrescriptionTextType & { dosages: Array<DosageStateType> }\n  >;\n};\n\nconst initialDosage: DosageStateType = {\n  morning: '',\n  afternoon: '',\n  night: '',\n  dates: '',\n};\n\nconst initialPrescription = {\n  medicineName: '',\n  quantity: '',\n  notes: '',\n  dosages: [initialDosage],\n};\n\nconst initialState = {\n  diagnosis: '',\n  procedureDone: '',\n  instructions: '',\n  prescriptions: [initialPrescription, initialPrescription],\n};\n\ninterface SheetAction {\n  name: keyof SheetTextType;\n  value: string;\n}\n\ninterface PrescriptionAction {\n  index: number;\n  name: keyof PrescriptionTextType;\n  value: string;\n}\n\ninterface DosageAction {\n  pIndex: number;\n  index: number;\n  name: keyof DosageStateType;\n  value: string;\n}\n\nconst slice = createSlice({\n  name: 'sheet',\n  initialState,\n  reducers: {\n    setSheetInput: (state, { payload }: PayloadAction<SheetAction>) => {\n      state[payload.name] = payload.value;\n    },\n    addPrescription: (state) => {\n      state.prescriptions.push(initialPrescription);\n    },\n    removePrescription: (state) => {\n      state.prescriptions.pop();\n    },\n    setPrescription: (\n      state,\n      { payload }: PayloadAction<PrescriptionAction>\n    ) => {\n      state.prescriptions[payload.index][payload.name] = payload.value;\n    },\n    addDosage: (state, { payload }: PayloadAction<{ index: number }>) => {\n      state.prescriptions[payload.index].dosages.push(initialDosage);\n    },\n    removeDosage: (state, { payload }: PayloadAction<{ index: number }>) => {\n      state.prescriptions[payload.index].dosages.pop();\n    },\n    setDosage: (\n      state,\n      { payload: { pIndex, index, name, value } }: PayloadAction<DosageAction>\n    ) => {\n      state.prescriptions[pIndex].dosages[index][name] = value;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(clear, () => initialState);\n  },\n});\n\nexport const {\n  setSheetInput,\n  addPrescription,\n  removePrescription,\n  setPrescription,\n  addDosage,\n  removeDosage,\n  setDosage,\n} = slice.actions;\nexport const { reducer: sheetReducer } = slice;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { Row } from './Row';\nimport {\n  MiddleColumn,\n  NotesColumn,\n  SerialColumn,\n  Table,\n  HeaderRow,\n} from './Table';\n\nimport { RootStateType } from '../../slices/index';\n\nimport {\n  setPrescription,\n  setDosage,\n  addPrescription,\n  removePrescription,\n  addDosage,\n  removeDosage,\n  PrescriptionTextType,\n  DosageStateType,\n} from '../../slices/sheet';\n\nconst PrescriptionComponent = ({\n  prescriptions,\n  setPrescription,\n  setDosage,\n  addPrescription,\n  removePrescription,\n  addDosage,\n  removeDosage,\n}: ReturnType<typeof mapState> & typeof mapDispatch) => {\n  return (\n    <Table>\n      <HeaderRow>\n        <SerialColumn>No.</SerialColumn>\n        <MiddleColumn>Medicine and Dosage</MiddleColumn>\n        <NotesColumn>Notes</NotesColumn>\n      </HeaderRow>\n      {prescriptions.map((_, index) => {\n        const onChange = ({\n          target: { name, value },\n        }: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n          setPrescription({\n            index,\n            name: name as keyof PrescriptionTextType,\n            value,\n          });\n        };\n        const onChangeMedicineName = (value: string) => {\n          setPrescription({ index, name: 'medicineName', value });\n        };\n\n        const entered = ({\n          target: { value },\n        }: React.ChangeEvent<HTMLInputElement>) => {\n          if (index === prescriptions.length - 1 && value.length !== 0) {\n            addPrescription();\n          }\n        };\n\n        const removed = ({\n          target: { value },\n        }: React.ChangeEvent<HTMLInputElement>) => {\n          if (\n            index !== 0 &&\n            index === prescriptions.length - 2 &&\n            value.length === 0\n          ) {\n            removePrescription();\n          }\n        };\n\n        const onDosageChange = (\n          dosageIndex: number,\n          name: string,\n          value: string\n        ) => {\n          setDosage({\n            pIndex: index,\n            index: dosageIndex,\n            name: name as keyof DosageStateType,\n            value,\n          });\n        };\n\n        const RowProps = {\n          index,\n          size: prescriptions.length,\n          entered,\n          removed,\n          ...prescriptions[index],\n          onChange,\n          onChangeMedicineName,\n          onDosageChange,\n          addDosage: () => addDosage({ index }),\n          removeDosage: () => removeDosage({ index }),\n        };\n        return <Row key={`row-key-${index}`} {...RowProps} />;\n      })}\n    </Table>\n  );\n};\n\nconst mapState = ({ sheet: { prescriptions } }: RootStateType) => ({\n  prescriptions,\n});\n\nconst mapDispatch = {\n  setPrescription,\n  addPrescription,\n  removePrescription,\n  setDosage,\n  addDosage,\n  removeDosage,\n};\n\nexport const Prescription = connect(\n  mapState,\n  mapDispatch\n)(PrescriptionComponent);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { RootStateType } from '../../slices';\nimport { Label } from '../common/Label';\nimport { Prescription } from './Prescription';\nimport { setSheetInput, SheetTextType } from '../../slices/sheet';\n\nconst SheetComponent = ({\n  diagnosis,\n  procedureDone,\n  instructions,\n  setSheetInput,\n}: ReturnType<typeof mapState> & typeof mapDispatch) => {\n  const onChange = ({\n    target: { name, value },\n  }: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    setSheetInput({ name: name as keyof SheetTextType, value });\n  };\n\n  return (\n    <>\n      <div>\n        <Label\n          name={'Diagnosis'}\n          inputName='diagnosis'\n          value={diagnosis}\n          onChange={onChange}\n        />\n        <Label\n          name={'Procedure\\u202fdone'}\n          inputName='procedureDone'\n          value={procedureDone}\n          onChange={onChange}\n        />\n      </div>\n      <div style={{ fontSize: '50px' }}>{'\\u211E'}</div>\n      <div>\n        <Prescription />\n      </div>\n      <div style={{ paddingTop: '50px' }}>\n        <Label\n          name='Instructions'\n          inputName='instructions'\n          value={instructions}\n          onChange={onChange}\n        />\n      </div>\n    </>\n  );\n};\n\nconst mapState = ({\n  sheet: { diagnosis, procedureDone, instructions },\n}: RootStateType) => ({ diagnosis, procedureDone, instructions });\n\nconst mapDispatch = {\n  setSheetInput,\n};\n\nexport const Sheet = connect(mapState, mapDispatch)(SheetComponent);\n","export const HEIGHT = 275;\nexport const WIDTH = 375;\nexport const OFFSET = 40;\n\nexport const DEFAULT = '';\n\nexport const X_AXIS = ['125', '250', '500', '1k', '2k', '4k', '6k'] as const;\nexport const Y_AXIS = [\n  '120',\n  '100',\n  '80',\n  '60',\n  '40',\n  '20',\n  '0',\n  '-20',\n] as const;\n\nexport const X_INCREMENT = (WIDTH - 2 * OFFSET) / X_AXIS.length;\nexport const Y_INCREMENT = (HEIGHT - 2 * OFFSET) / (Y_AXIS.length - 1);\n","import {\n  DEFAULT,\n  OFFSET,\n  X_INCREMENT,\n  X_AXIS,\n  Y_INCREMENT,\n} from '../contants/chart';\nimport { PointsType } from '../slices/chart';\n\nexport const calcX = (index: number): number => {\n  return OFFSET + (index + 1) * X_INCREMENT;\n};\n\nexport const calcY = (value: string): number => {\n  return OFFSET + ((+value / 10) * Y_INCREMENT) / 2 + Y_INCREMENT;\n};\n\nexport const toPointsLine = (points: PointsType) => {\n  return X_AXIS.reduce((acc, curr, index) => {\n    if (points[curr] !== DEFAULT) {\n      const cx = calcX(index);\n      const cy = calcY(points[curr]);\n      return acc + ' ' + cx + ',' + cy;\n    } else {\n      return acc;\n    }\n  }, '');\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\nimport {\n  HEIGHT,\n  WIDTH,\n  X_AXIS,\n  Y_AXIS,\n  DEFAULT,\n  OFFSET,\n  X_INCREMENT,\n  Y_INCREMENT,\n} from '../../contants/chart';\nimport { RootStateType } from '../../slices';\nimport { ChartStateType } from '../../slices/chart';\nimport { calcX, calcY, toPointsLine } from '../../utils/chart-utils';\n\nconst Legend = styled.g`\n  font-size: 10px;\n  & > text {\n  }\n`;\n\nconst Axis = styled.g`\n  & > line {\n    stroke: black;\n  }\n`;\n\nconst AxisTitle = styled.g`\n  font-size: 12px;\n`;\n\nconst AxisLabel = styled.g`\n  font-size: 14px;\n`;\n\nconst RightAir = styled.g`\n  & > circle {\n    fill: white;\n    stroke: red;\n  }\n  & > polyline {\n    stroke: red;\n    fill: none;\n  }\n`;\n\nconst RightBone = styled(RightAir)`\n  & > polyline {\n    stroke-dasharray: 5;\n  }\n`;\n\nconst LeftAir = styled.g`\n  font: bold 15px arial;\n  & > text {\n    fill: blue;\n  }\n  & > polyline {\n    stroke: blue;\n  }\n`;\n\nconst LeftBone = styled(LeftAir)`\n  & > polyline {\n    stroke-dasharray: 5;\n  }\n`;\n\nconst subAxisStyle = {\n  strokeWidth: '1px',\n  stroke: 'darkgrey',\n  strokeDasharray: '1',\n  fill: 'none',\n};\n\nconst subSubAxisStyle = {\n  ...subAxisStyle,\n  stroke: 'lightgrey',\n};\n\nconst ChartComponent = ({\n  rightAir,\n  rightBone,\n  leftAir,\n  leftBone,\n}: ChartStateType) => {\n  return (\n    <svg\n      version='1.2'\n      role='img'\n      style={{\n        height: `${HEIGHT}`,\n        width: `${WIDTH}`,\n      }}\n    >\n      <Legend transform='translate(50,5)'>\n        <text x='0' y='10'>\n          Right Air\n        </text>\n        <line x1='60' y1='7' x2='110' y2='7' stroke='red' fill='none' />\n        <circle cx='85' cy='7' r='3' stroke='red' fill='white' />\n        <text x='0' y='25'>\n          Right Bone\n        </text>\n        <line\n          x1='60'\n          y1='22'\n          x2='110'\n          y2='22'\n          stroke='red'\n          strokeDasharray='4'\n          fill='none'\n        />\n        <circle cx='85' cy='22' r='3' stroke='red' fill='white' />\n        <text x='150' y='10'>\n          Left Air\n        </text>\n        <line x1='210' y1='7' x2='260' y2='7' stroke='blue' fill='none' />\n        <text\n          x='235'\n          y='10.5'\n          style={{ font: 'bold 15px arial', color: 'blue' }}\n          fill='blue'\n          textAnchor='middle'\n        >\n          x\n        </text>\n        <text x='150' y='25'>\n          Left Bone\n        </text>\n        <line\n          x1='210'\n          y1='22'\n          x2='260'\n          y2='22'\n          stroke='blue'\n          strokeDasharray='4'\n          fill='none'\n        />\n        <text\n          x='235'\n          y='25.5'\n          style={{ font: 'bold 15px arial', color: 'blue' }}\n          fill='blue'\n          textAnchor='middle'\n        >\n          x\n        </text>\n      </Legend>\n      <Axis>\n        {/* Y Axis Helpers */}\n        {X_AXIS.map((key, index) => {\n          const x = OFFSET + (index + 1) * X_INCREMENT;\n          return (\n            <line\n              key={key}\n              style={subAxisStyle}\n              x1={x}\n              y1={OFFSET}\n              x2={x}\n              y2={HEIGHT - OFFSET}\n            />\n          );\n        })}\n        {X_AXIS.map((key, index) => {\n          const x = OFFSET + (index + 1) * X_INCREMENT - X_INCREMENT / 2;\n          return (\n            <line\n              key={key}\n              style={subSubAxisStyle}\n              x1={x}\n              y1={OFFSET}\n              x2={x}\n              y2={HEIGHT - OFFSET}\n            />\n          );\n        })}\n        {/* X Axis Helpers */}\n        {Y_AXIS.map((key, index) => {\n          const y = HEIGHT - OFFSET - (index + 1) * Y_INCREMENT;\n          return index !== Y_AXIS.length - 1 ? (\n            <line\n              key={key}\n              style={subAxisStyle}\n              x1={OFFSET}\n              y1={y}\n              x2={WIDTH - OFFSET}\n              y2={y}\n            />\n          ) : null;\n        })}\n        {Y_AXIS.map((key, index) => {\n          const y =\n            HEIGHT - OFFSET - (index + 1) * Y_INCREMENT + Y_INCREMENT / 2;\n          return index !== Y_AXIS.length - 1 ? (\n            <line\n              key={key}\n              style={subSubAxisStyle}\n              x1={OFFSET}\n              y1={y}\n              x2={WIDTH - OFFSET}\n              y2={y}\n            />\n          ) : null;\n        })}\n        {/* X Axis */}\n        <line\n          x1={OFFSET}\n          y1={HEIGHT - OFFSET}\n          x2={WIDTH - OFFSET}\n          y2={HEIGHT - OFFSET}\n        />\n        {/* Y Axis */}\n        <line x1={OFFSET} y1={OFFSET} x2={OFFSET} y2={HEIGHT - OFFSET} />\n      </Axis>\n      <AxisLabel>\n        {X_AXIS.map((key, index) => {\n          const x = OFFSET + (index + 1) * X_INCREMENT;\n          return (\n            <text key={key} x={x} y={HEIGHT - OFFSET + 13} textAnchor='middle'>\n              {key}\n            </text>\n          );\n        })}\n        {Y_AXIS.map((key, index) => {\n          const y = HEIGHT - OFFSET - index * Y_INCREMENT + 4;\n          return (\n            <text key={key} x={OFFSET - 4} y={y} textAnchor='end'>\n              {key}\n            </text>\n          );\n        })}\n      </AxisLabel>\n      <AxisTitle>\n        <text\n          x={OFFSET - 25}\n          y={HEIGHT / 2}\n          textAnchor='middle'\n          transform={`rotate(-90, ${OFFSET - 25}, ${HEIGHT / 2})`}\n        >\n          Intensity (db)\n        </text>\n        <text x={WIDTH / 2} y={HEIGHT - OFFSET + 30} textAnchor='middle'>\n          Frequency (Hz)\n        </text>\n      </AxisTitle>\n      <RightAir>\n        <polyline points={toPointsLine(rightAir)} />\n        {X_AXIS.map((x, index) => {\n          const cx = calcX(index);\n          const cy = calcY(rightAir[x]);\n          return rightAir[x] === DEFAULT ? null : (\n            <circle key={x} cx={cx} cy={cy} r='3' />\n          );\n        })}\n      </RightAir>\n      <RightBone>\n        <polyline points={toPointsLine(rightBone)} />\n        {X_AXIS.map((x, index) => {\n          const cx = calcX(index);\n          const cy = calcY(rightBone[x]);\n          return rightBone[x] === DEFAULT ? null : (\n            <circle key={x} cx={cx} cy={cy} r='3' />\n          );\n        })}\n      </RightBone>\n      <LeftAir>\n        {X_AXIS.map((x, index) => {\n          const cx = calcX(index);\n          const cy = calcY(leftAir[x]) + 4.5;\n          return leftAir[x] === DEFAULT ? null : (\n            <text key={x} x={cx} y={cy} textAnchor='middle'>\n              x\n            </text>\n          );\n        })}\n        <polyline fill='none' points={toPointsLine(leftAir)} />\n      </LeftAir>\n      <LeftBone>\n        {X_AXIS.map((x, index) => {\n          const cx = calcX(index);\n          const cy = calcY(leftBone[x]) + 4.5;\n          return leftBone[x] === DEFAULT ? null : (\n            <text key={x} x={cx} y={cy} textAnchor='middle'>\n              x\n            </text>\n          );\n        })}\n        <polyline fill='none' points={toPointsLine(leftBone)} />\n      </LeftBone>\n    </svg>\n  );\n};\n\nconst mapState = ({\n  chart: { rightAir, rightBone, leftAir, leftBone },\n}: RootStateType) => ({\n  rightAir,\n  rightBone,\n  leftAir,\n  leftBone,\n});\n\nexport const Chart = connect(mapState)(ChartComponent);\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { clear } from './clear';\n\nexport interface AudiogramStateType {\n  remarks: string;\n  hearingAidTrial: string;\n}\n\nconst initialState: AudiogramStateType = {\n  remarks: '',\n  hearingAidTrial: '',\n};\n\ninterface NameValue {\n  name: keyof AudiogramStateType;\n  value: string;\n}\n\nconst slice = createSlice({\n  name: 'audiogram',\n  initialState,\n  reducers: {\n    setAudiogramInput: (state, { payload }: PayloadAction<NameValue>) => {\n      state[payload.name] = payload.value;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(clear, () => initialState);\n  },\n});\n\nexport const { setAudiogramInput } = slice.actions;\nexport const { reducer: audiogramReducer } = slice;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DEFAULT, X_AXIS } from '../contants/chart';\nimport { clear } from './clear';\n\nexport type PointsType = {\n  [key in typeof X_AXIS[number]]: string;\n};\n\nexport interface ChartStateType {\n  rightAir: PointsType;\n  rightBone: PointsType;\n  leftAir: PointsType;\n  leftBone: PointsType;\n}\n\nconst initialPoints = X_AXIS.reduce(\n  (o, key) => ({ ...o, [key]: DEFAULT }),\n  {} as PointsType\n);\n\nconst initialState: ChartStateType = {\n  rightAir: initialPoints,\n  rightBone: initialPoints,\n  leftAir: initialPoints,\n  leftBone: initialPoints,\n};\n\ninterface ActionType {\n  sideKey: keyof ChartStateType;\n  name: keyof PointsType;\n  value: string;\n}\n\nconst slice = createSlice({\n  name: 'chart',\n  initialState,\n  reducers: {\n    setPoint: (state, { payload }: PayloadAction<ActionType>) => {\n      state[payload.sideKey][payload.name] = payload.value;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(clear, () => initialState);\n  },\n});\n\nexport const { setPoint } = slice.actions;\nexport const { reducer: chartReducer } = slice;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\n\nimport { Chart } from './Chart';\nimport { Label } from '../common/Label';\n\nimport { AudiogramStateType, setAudiogramInput } from '../../slices/audiogram';\nimport { ChartStateType, PointsType, setPoint } from '../../slices/chart';\nimport { RootStateType } from '../../slices';\nimport { X_AXIS } from '../../contants/chart';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-top: 20px;\n  @media print {\n    justify-content: center;\n  }\n`;\n\nconst ChartContainer = styled.div`\n  @media print {\n    padding-top: 20px;\n    padding-bottom: 40px;\n\n    & > svg {\n      transform: scale(1.25);\n    }\n  }\n`;\n\nconst Entry = styled.div`\n  @media print {\n    display: none;\n  }\n`;\n\nconst Cell = styled.div`\n  width: 60px;\n  text-align: center;\n  & > input[type='number'] {\n    width: 55px;\n    border: none;\n    text-align: center;\n    &::-webkit-outer-spin-button,\n    &::-webkit-inner-spin-button {\n      opacity: 1;\n    }\n  }\n`;\n\nconst NumberInput = styled.input.attrs((_) => ({\n  type: 'number',\n  placeholder: '0',\n  min: -20,\n  max: 99,\n  step: 5,\n}))`\n  font-size: 17px;\n  line-height: inherit;\n  width: 100%;\n  border: none;\n  text-align: center;\n  position: relative;\n  z-index: 1;\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    opacity: 1;\n  }\n  &:focus {\n    z-index: 2;\n  }\n`;\n\ninterface NumbersType {\n  points: PointsType;\n  sideKey: keyof ChartStateType;\n}\n\nconst AudiogramComponent = ({\n  rightAir,\n  rightBone,\n  leftAir,\n  leftBone,\n  remarks,\n  hearingAidTrial,\n  setPoint,\n  setAudiogramInput,\n}: ReturnType<typeof mapState> & typeof mapDispatch) => {\n  const onChange = ({\n    target: { name, value },\n  }: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    setAudiogramInput({ name: name as keyof AudiogramStateType, value });\n  };\n\n  const arr: Array<NumbersType> = [\n    { points: rightAir, sideKey: 'rightAir' },\n    { points: rightBone, sideKey: 'rightBone' },\n    { points: leftAir, sideKey: 'leftAir' },\n    { points: leftBone, sideKey: 'leftBone' },\n  ];\n  return (\n    <>\n      <Container>\n        <Entry>\n          {/* Header */}\n          <div style={{ display: 'flex', borderBottom: '1px solid lightgrey' }}>\n            <Cell\n              style={{\n                textAlign: 'right',\n                borderRight: '1px solid lightgrey',\n                paddingRight: '5px',\n                lineHeight: '50px',\n              }}\n            >\n              Freq\n            </Cell>\n            <div>\n              <div style={{ width: '120px', textAlign: 'center' }}>Right</div>\n              <div style={{ display: 'flex' }}>\n                <Cell>Air</Cell>\n                <Cell>Bone</Cell>\n              </div>\n            </div>\n            <div>\n              <div style={{ width: '120px', textAlign: 'center' }}>Left</div>\n              <div style={{ display: 'flex' }}>\n                <Cell>Air</Cell>\n                <Cell>Bone</Cell>\n              </div>\n            </div>\n          </div>\n          {/* Body/Content */}\n          <div style={{ display: 'flex' }}>\n            <Cell\n              style={{\n                borderRight: '1px solid lightgrey',\n                paddingRight: '5px',\n              }}\n            >\n              {X_AXIS.map((x) => (\n                <div key={x} style={{ height: '27px', textAlign: 'right' }}>\n                  {x}\n                </div>\n              ))}\n            </Cell>\n            {arr.map(({ sideKey, points }, i) => {\n              const onChange = ({\n                target: { name, value },\n              }: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n                setPoint({\n                  sideKey: sideKey as keyof ChartStateType,\n                  name: name as keyof PointsType,\n                  value,\n                });\n              };\n              return (\n                <div key={`div-${sideKey}-${i}`}>\n                  {X_AXIS.map((x) => (\n                    <Cell key={`cell-${sideKey}-${i}-${x}`}>\n                      <NumberInput\n                        onChange={onChange}\n                        name={x}\n                        value={points[x]}\n                      />\n                    </Cell>\n                  ))}\n                </div>\n              );\n            })}\n          </div>\n        </Entry>\n        <ChartContainer>\n          <Chart />\n        </ChartContainer>\n      </Container>\n      <div>\n        <Label\n          inputName='remarks'\n          name='Remarks'\n          onChange={onChange}\n          value={remarks}\n        />\n        <Label\n          inputName='hearingAidTrial'\n          name={'Hearing\\u202fAid\\u202fTrial'}\n          onChange={onChange}\n          value={hearingAidTrial}\n        />\n      </div>\n    </>\n  );\n};\n\nconst mapState = ({\n  chart: { rightAir, rightBone, leftAir, leftBone },\n  audiogram: { remarks, hearingAidTrial },\n}: RootStateType) => ({\n  rightAir,\n  rightBone,\n  leftAir,\n  leftBone,\n  remarks,\n  hearingAidTrial,\n});\n\nconst mapDispatch = {\n  setPoint,\n  setAudiogramInput,\n};\n\nexport const Audiogram = connect(mapState, mapDispatch)(AudiogramComponent);\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { clear } from './clear';\n\nexport interface CommonStateType {\n  fileNo: string;\n  opdNo: string;\n  name: string;\n  ageSex: string;\n  address: string;\n}\n\nconst initialState: CommonStateType = {\n  fileNo: '',\n  opdNo: '',\n  name: '',\n  ageSex: '',\n  address: '',\n};\n\ninterface NameValue {\n  name: keyof CommonStateType;\n  value: string;\n}\n\nconst slice = createSlice({\n  name: 'common',\n  initialState,\n  reducers: {\n    setCommonInput: (state, { payload }: PayloadAction<NameValue>) => {\n      state[payload.name] = payload.value;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(clear, () => initialState);\n  },\n});\n\nexport const { setCommonInput } = slice.actions;\nexport const { reducer: commonReducer } = slice;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\n\nimport { StyledLabel } from './CommonComponents';\nimport { Label } from './Label';\n\nimport { setCommonInput, CommonStateType } from '../../slices/common';\nimport { RootStateType } from '../../slices';\n\nconst Input = styled.input.attrs((_) => ({\n  type: 'text',\n}))`\n  width: 60px;\n  border: none;\n  border-bottom: 1px dotted grey;\n  text-align: left;\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    opacity: 1;\n  }\n  &:focus {\n    outline: transparent;\n    border-bottom: 1px solid gray;\n  }\n  @media print {\n    border: none;\n    &:focus {\n      border: none;\n      outline: none;\n    }\n    &::placeholder {\n      color: transparent;\n    }\n\n    &::-webkit-outer-spin-button,\n    &::-webkit-inner-spin-button {\n      -webkit-appearance: none;\n      margin: 0;\n    }\n  }\n`;\n\nconst Top = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  & > div {\n    padding-left: 20px;\n  }\n`;\n\nconst CommonComponent = ({\n  fileNo,\n  opdNo,\n  name,\n  ageSex,\n  address,\n  setCommon,\n}: ReturnType<typeof mapState> & typeof mapDispatch) => {\n  const date = new Date().toLocaleDateString('en-IN');\n\n  const onChange = ({\n    target: { name, value },\n  }: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    setCommon({ name: name as keyof CommonStateType, value });\n  };\n\n  return (\n    <>\n      <Top>\n        <div>\n          <label>\n            File No:{' '}\n            <Input\n              maxLength={7}\n              name='fileNo'\n              value={fileNo}\n              onChange={onChange}\n            />\n          </label>\n        </div>\n        <div>\n          <label>\n            OPD No:{' '}\n            <Input\n              maxLength={7}\n              name='opdNo'\n              value={opdNo}\n              onChange={onChange}\n            />\n          </label>\n        </div>\n        <div>Date: {date}</div>\n      </Top>\n      <div style={{ display: 'flex', alignItems: 'flex-start' }}>\n        <StyledLabel style={{ width: '100%' }}>\n          Name:{' '}\n          <Input\n            maxLength={65}\n            autoComplete='off'\n            style={{ width: '100%' }}\n            name='name'\n            value={name}\n            onChange={onChange}\n          />\n        </StyledLabel>\n        <StyledLabel>\n          Age/Sex:{' '}\n          <Input\n            maxLength={7}\n            style={{ width: '70px' }}\n            name='ageSex'\n            value={ageSex}\n            onChange={onChange}\n          />\n        </StyledLabel>\n      </div>\n      <div>\n        <Label\n          inputName='address'\n          name='Address'\n          value={address}\n          onChange={onChange}\n        />\n      </div>\n    </>\n  );\n};\n\nconst mapState = ({\n  common: { fileNo, opdNo, name, ageSex, address },\n}: RootStateType) => ({ fileNo, opdNo, name, ageSex, address });\n\nconst mapDispatch = {\n  setCommon: setCommonInput,\n};\n\nexport const Common = connect(mapState, mapDispatch)(CommonComponent);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { BrowserRouter, Link, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { LetterHead } from './components/common/LetterHead';\nimport { PrintButton } from './components/common/PrintButton';\nimport { Sheet } from './components/prescription/Sheet';\nimport { Audiogram } from './components/audiogram/Audiogram';\nimport { Common } from './components/common/Common';\n\nimport { RootStateType } from './slices';\nimport { clear } from './slices/clear';\n\nconst OverallDiv = styled.div<{ printLetterHead: boolean }>`\n  padding-top: 10px;\n  padding-left: 50px;\n  padding-right: 50px;\n  font-size: 17px;\n  @media print {\n    padding-top: ${({ printLetterHead }) =>\n      printLetterHead ? '10mm' : '80mm'};\n  }\n`;\n\nconst Navigator = styled.div`\n  font-size: 13px;\n  position: fixed;\n  top: 10px;\n  left: 10px;\n  border-radius: 4px;\n  box-shadow: 0 0 10px gray;\n  background-color: white;\n  padding: 10px;\n  & > div {\n    border-bottom: 1px dashed blue;\n    padding-bottom: 5px;\n  }\n  & > div:hover {\n    border-bottom: 1px solid blue;\n    padding-bottom: 5px;\n  }\n  & a {\n    text-decoration: none;\n  }\n  & a:visited {\n    color: blue;\n  }\n  @media print {\n    display: none;\n  }\n`;\n\nconst AppComponent = ({\n  printLetterHead,\n  clear,\n}: ReturnType<typeof mapState> & typeof mapDispatch) => {\n  return (\n    <>\n      <LetterHead />\n      <OverallDiv printLetterHead={printLetterHead}>\n        <Common />\n        <BrowserRouter>\n          <Navigator>\n            <div>\n              <Link to='/' onClick={clear}>\n                <div>Clear</div>\n              </Link>\n            </div>\n            <div>\n              <Link to='/precription'>\n                <div>Prescription</div>\n              </Link>\n            </div>\n            <div>\n              <Link to='/audiogram'>\n                <div>Audiogram</div>\n              </Link>\n            </div>\n          </Navigator>\n          <Switch>\n            <Route path='/precription'>\n              <Sheet />\n            </Route>\n            <Route path='/audiogram'>\n              <Audiogram />\n            </Route>\n            <Route path='/'>{null}</Route>\n          </Switch>\n        </BrowserRouter>\n      </OverallDiv>\n      <PrintButton />\n    </>\n  );\n};\n\nconst mapState = ({ letterHead: { print } }: RootStateType) => ({\n  printLetterHead: print,\n});\n\nconst mapDispatch = {\n  clear,\n};\n\nexport const App = connect(mapState, mapDispatch)(AppComponent);\n","import { combineReducers } from 'redux';\n\nimport { audiogramReducer, AudiogramStateType } from './audiogram';\nimport { chartReducer, ChartStateType } from './chart';\nimport { commonReducer, CommonStateType } from './common';\nimport { letterHeadReducer, LetterHeadStateType } from './letterHead';\nimport { printReducer } from './print';\nimport { sheetReducer, SheetStateType } from './sheet';\n\nexport interface RootStateType {\n  letterHead: LetterHeadStateType;\n  common: CommonStateType;\n  sheet: SheetStateType;\n  chart: ChartStateType;\n  audiogram: AudiogramStateType;\n  print: boolean;\n}\n\nexport const reducer = combineReducers({\n  chart: chartReducer,\n  audiogram: audiogramReducer,\n  common: commonReducer,\n  sheet: sheetReducer,\n  letterHead: letterHeadReducer,\n  print: printReducer,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport { App } from './App';\nimport { reducer } from './slices';\n\n// import reportWebVitals from './reportWebVitals';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}