{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","num","setNum","checkTableSize","i","className","type","contentEditable","Array","fill","map","_","index","maybe","divMaybe","key","rowSpan","style","verticalAlign","width","placeholder","onChange","display","flexGrow","textAlign","outline","data-ph","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAIaA,G,MAAM,WAAO,IAAD,EACDC,mBAAS,GADR,mBAChBC,EADgB,KACXC,EADW,KAGjBC,EAAiB,SAACC,GAClBA,IAAMH,GACRC,EAAOD,EAAM,IAIjB,OACE,yBAAKI,UAAU,WACb,yBAAKA,UAAU,QACb,6BACE,2BAAOA,UAAU,SAAjB,QAEE,2BAAOC,KAAK,WAGhB,6BACE,2BAAOD,UAAU,SAAjB,aAEE,2BAAOC,KAAK,WAGhB,6BACE,2BAAOD,UAAU,SAAjB,kBAEE,yBAAKE,iBAAe,MAGxB,6BACE,2BAAOF,UAAU,SAAjB,QAEE,2BAAOC,KAAK,WAGhB,6BACE,0BAAMD,UAAU,MAAM,YAG1B,yBAAKA,UAAU,gBACb,+BACE,+BACGG,MAAMP,GACJQ,KAAK,IACLC,KAAI,SAACC,EAAGP,GACP,IAAMQ,EAAQR,EAAI,EADL,EAGXQ,IAAUX,EAAM,CAAC,QAAS,eAAiB,CAAC,GAAI,UAHrC,mBAENY,EAFM,KAECC,EAFD,KAIb,OACE,kBAAC,WAAD,CAAUC,IAAG,cAASH,IACpB,wBAAIP,UAAWQ,GACb,wBAAIG,QAAS,EAAGC,MAAO,CAAEC,cAAe,QACrCN,GAEH,wBAAIK,MAAO,CAAEE,MAAO,SAClB,2BACEF,MAAO,CAAEE,MAAO,QAChBb,KAAK,OACLc,YAAY,OACZf,UAAU,aACVgB,SAAU,kBAAMlB,EAAeS,OAGnC,4BACE,yBAAKK,MAAO,CAAEK,QAAS,SACrB,yBAAKL,MAAO,CAAEM,SAAU,EAAGC,UAAW,SACpC,2BACEP,MAAO,CAAEE,MAAO,QAChBb,KAAK,OACLc,YAAY,OACZf,UAAU,aACVgB,SAAU,kBAAMlB,EAAeS,OAGnC,yBAAKP,UAAWS,GACd,2BACEG,MAAO,CAAEE,MAAO,SAChBb,KAAK,OACLc,YAAY,WACZf,UAAU,aACVgB,SAAU,kBAAMlB,EAAeS,OAGnC,6BACE,2BACEK,MAAO,CAAEE,MAAO,SAChBb,KAAK,OACLc,YAAY,WACZf,UAAU,aACVgB,SAAU,kBAAMlB,EAAeS,SAKvC,wBACEI,QAAS,EACTC,MAAO,CACLE,MAAO,QACPD,cAAe,MACfM,UAAW,OACXC,QAAS,SAGX,yBAAKlB,iBAAe,EAACmB,UAAQ,cAGjC,wBAAIrB,UAAWQ,GACb,6BACA,4BACE,yBAAKR,UAAU,YACb,yBAAKA,UAAU,WACb,6BACE,2BACEY,MAAO,CAAEE,MAAO,QAChBb,KAAK,OACLe,SAAU,kBAAMlB,EAAeS,OALrC,WAUA,yBAAKP,UAAS,oBAAeS,IAC3B,6BACE,2BACEG,MAAO,CAAEE,MAAO,QAChBb,KAAK,OACLe,SAAU,kBAAMlB,EAAeS,OALrC,aAUA,yBAAKP,UAAU,SACb,6BACE,2BACEY,MAAO,CAAEE,MAAO,QAChBb,KAAK,OACLe,SAAU,kBAAMlB,EAAeS,OALrC,sBCjI1Be,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.23cba0be.chunk.js","sourcesContent":["import React, { Fragment, useState } from \"react\";\n\nimport \"./App.css\";\n\nexport const App = () => {\n  const [num, setNum] = useState(2);\n\n  const checkTableSize = (i: number) => {\n    if (i === num) {\n      setNum(num + 1);\n    }\n  };\n\n  return (\n    <div className=\"overall\">\n      <div className=\"info\">\n        <div>\n          <label className=\"label\">\n            Name:\n            <input type=\"text\" />\n          </label>\n        </div>\n        <div>\n          <label className=\"label\">\n            Diagnosis:\n            <input type=\"text\" />\n          </label>\n        </div>\n        <div>\n          <label className=\"label\">\n            Procedure done:\n            <div contentEditable />\n          </label>\n        </div>\n        <div>\n          <label className=\"label\">\n            Care:\n            <input type=\"text\" />\n          </label>\n        </div>\n        <div>\n          <span className=\"rx\">{\"\\u211E\"}</span>\n        </div>\n      </div>\n      <div className=\"prescription\">\n        <table>\n          <tbody>\n            {Array(num)\n              .fill(\"\")\n              .map((_, i) => {\n                const index = i + 1;\n                const [maybe, divMaybe] =\n                  index === num ? [\"maybe\", \"maybeMiddle\"] : [\"\", \"middle\"];\n                return (\n                  <Fragment key={`key-${index}`}>\n                    <tr className={maybe}>\n                      <td rowSpan={2} style={{ verticalAlign: \"top\" }}>\n                        {index}\n                      </td>\n                      <td style={{ width: \"50px\" }}>\n                        <input\n                          style={{ width: \"50px\" }}\n                          type=\"text\"\n                          placeholder=\"Type\"\n                          className=\"tableInput\"\n                          onChange={() => checkTableSize(index)}\n                        />\n                      </td>\n                      <td>\n                        <div style={{ display: \"flex\" }}>\n                          <div style={{ flexGrow: 2, textAlign: \"left\" }}>\n                            <input\n                              style={{ width: \"100%\" }}\n                              type=\"text\"\n                              placeholder=\"Name\"\n                              className=\"tableInput\"\n                              onChange={() => checkTableSize(index)}\n                            />\n                          </div>\n                          <div className={divMaybe}>\n                            <input\n                              style={{ width: \"100px\" }}\n                              type=\"text\"\n                              placeholder=\"Strength\"\n                              className=\"tableInput\"\n                              onChange={() => checkTableSize(index)}\n                            />\n                          </div>\n                          <div>\n                            <input\n                              style={{ width: \"100px\" }}\n                              type=\"text\"\n                              placeholder=\"Quantity\"\n                              className=\"tableInput\"\n                              onChange={() => checkTableSize(index)}\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td\n                        rowSpan={2}\n                        style={{\n                          width: \"100px\",\n                          verticalAlign: \"top\",\n                          textAlign: \"left\",\n                          outline: \"none\",\n                        }}\n                      >\n                        <div contentEditable data-ph=\"Remarks\" />\n                      </td>\n                    </tr>\n                    <tr className={maybe}>\n                      <td></td>\n                      <td>\n                        <div className=\"schedule\">\n                          <div className=\"morning\">\n                            <div>\n                              <input\n                                style={{ width: \"30px\" }}\n                                type=\"text\"\n                                onChange={() => checkTableSize(index)}\n                              />\n                            </div>\n                            Morning\n                          </div>\n                          <div className={`afternoon ${divMaybe}`}>\n                            <div>\n                              <input\n                                style={{ width: \"30px\" }}\n                                type=\"text\"\n                                onChange={() => checkTableSize(index)}\n                              />\n                            </div>\n                            Afternoon\n                          </div>\n                          <div className=\"night\">\n                            <div>\n                              <input\n                                style={{ width: \"30px\" }}\n                                type=\"text\"\n                                onChange={() => checkTableSize(index)}\n                              />\n                            </div>\n                            Night\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                  </Fragment>\n                );\n              })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}